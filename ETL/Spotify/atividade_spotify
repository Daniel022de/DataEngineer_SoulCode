{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "collapsed_sections": [
        "9b0dwRk5q1Yk",
        "e-AISMIm6kU4",
        "SBo6jNcF6yYB",
        "Xa1V23lm8SZX",
        "5QV5A2CC8ucL",
        "vQnITozpybDp",
        "oUZLLjNA_o2h",
        "oXoX_7xQBOIK",
        "fA3mPVXJCbsp"
      ],
      "authorship_tag": "ABX9TyMXcKVJXSQyfbZ6BdZD+TFJ",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Daniel022de/DataEnginner_SoulCode/blob/main/ETL/Spotify/atividade_spotify\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#🔧**ATIVIDADE SPARK - SPOTIFY**\n",
        "\n",
        "Esse Notebook é referente a uma atividade proposta pelo professor **Bismark William** no bootcamp **engenharia de dados** da **SoulCode** visando a consolidação dos conhecimentos sobre a conexão do colab a um bucket privado da **Google Cloud Storage**, a utilidade do **Pyspark** no processo de extração,transformação,carregamento e análise introdutória de dados, a utilidade do **SparkSQL** para consulta. Foi utilizado um dataset com detalhes sobre músicas do spotify disponível no meu **bucket privado**.\n",
        "\n",
        "\n",
        "**A proposta foi a seguinte:**\n",
        "\n",
        "* Extraia um Dataset do seu bucket privado através de uma conexão com o Google Cloud storage\n",
        "\n",
        " \n",
        "* RENOMEAR TODAS AS COLUNAS (TRADUZINDO PARA O PORTUGUÊS) \n",
        "\n",
        "\n",
        "* FAÇA UMA ANÁLISE INICIAL, ORDENANDO POR COLUNAS DE FORMA ASCENDENTE E DESCENDENTE \n",
        "\n",
        "\n",
        "* VERIFIQUE SE HÁ ALGUMA COLUNA QUE NÃO TENHA INFORMAÇÃO RELEVANTE E FAÇA UM DROP \n",
        "\n",
        "\n",
        "* VERIFIQUE SE HÁ LINHAS DUPLICADAS (DUPLICATAS) E REMOVA-AS.   \n",
        "\n",
        "\n",
        "* VERIFIQUE SE HÁ DADOS INCONSISTENTES (Dica: Unidades de medida)  \n",
        "\n",
        "\n",
        "* REMOVA AS INCONSISTÊNCIAS  \n",
        "\n",
        "\n",
        "* VERIFIQUE OS TIPOS DE DADOS DAS COLUNAS, E COLOQUE PARA UM TIPO MAIS ADEQUADO. \n",
        "\n",
        "\n",
        "* FAÇA OUTRAS VERIFICAÇÕES DE ACORDO COM A SUA EXPERIÊNCIA EM PANDAS.\n",
        "\n",
        "\n",
        "* ENCONTRE ALGUMAS ANÁLISES INTERESSANTES UTILIZANDO AS FUNÇÕES DO SPARK VISTAS EM AULA E LISTE PELO MENOS 5 DESSAS.\n",
        "\n",
        "* CRIAR PELO MENOS 5 CONSULTAS COM SPARKSQL NA TABELA SPOTIFY\n",
        "\n",
        "* ENVIAR OS DADOS DO SPOTIFY AO BANCO DE DADOS MYSQL (PODE USAR O PANDAS) !!\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "! **Você pode encontrar esse notebook no meu repositório** [GitHub](https://github.com/Daniel022de/Bootcamp_SoulCode_EngenhariaDados)\n",
        "\n",
        "! **Você pode entrar em contato comigo através do meu email** ddololiveira.pessoal@gmail.com **e** [Linkedin](https://www.linkedin.com/in/daniel-oliveira-503b0323b/).\n",
        "\n",
        "! **Toda dúvida,recomendações e feedbacks serão bem-vindas.**\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "YeNROHIYoJB_"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "#⚡1 **Instalação**"
      ],
      "metadata": {
        "id": "Sps280drovOl"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xQ_2I7Uanczq",
        "outputId": "5810a823-d67f-48a7-ef19-df4bf9346772"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Collecting pyspark\n",
            "  Downloading pyspark-3.3.1.tar.gz (281.4 MB)\n",
            "\u001b[K     |████████████████████████████████| 281.4 MB 42 kB/s \n",
            "\u001b[?25hCollecting py4j==0.10.9.5\n",
            "  Downloading py4j-0.10.9.5-py2.py3-none-any.whl (199 kB)\n",
            "\u001b[K     |████████████████████████████████| 199 kB 56.2 MB/s \n",
            "\u001b[?25hBuilding wheels for collected packages: pyspark\n",
            "  Building wheel for pyspark (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for pyspark: filename=pyspark-3.3.1-py2.py3-none-any.whl size=281845512 sha256=d896b6164daf2003011de6f26514aeb07e2736f7b8ed827424c9cc0305ff6005\n",
            "  Stored in directory: /root/.cache/pip/wheels/43/dc/11/ec201cd671da62fa9c5cc77078235e40722170ceba231d7598\n",
            "Successfully built pyspark\n",
            "Installing collected packages: py4j, pyspark\n",
            "Successfully installed py4j-0.10.9.5 pyspark-3.3.1\n",
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Collecting gcsfs\n",
            "  Downloading gcsfs-2022.11.0-py2.py3-none-any.whl (26 kB)\n",
            "Requirement already satisfied: aiohttp!=4.0.0a0,!=4.0.0a1 in /usr/local/lib/python3.8/dist-packages (from gcsfs) (3.8.3)\n",
            "Requirement already satisfied: fsspec==2022.11.0 in /usr/local/lib/python3.8/dist-packages (from gcsfs) (2022.11.0)\n",
            "Requirement already satisfied: requests in /usr/local/lib/python3.8/dist-packages (from gcsfs) (2.23.0)\n",
            "Requirement already satisfied: google-auth>=1.2 in /usr/local/lib/python3.8/dist-packages (from gcsfs) (2.15.0)\n",
            "Requirement already satisfied: google-cloud-storage in /usr/local/lib/python3.8/dist-packages (from gcsfs) (2.5.0)\n",
            "Requirement already satisfied: decorator>4.1.2 in /usr/local/lib/python3.8/dist-packages (from gcsfs) (4.4.2)\n",
            "Requirement already satisfied: google-auth-oauthlib in /usr/local/lib/python3.8/dist-packages (from gcsfs) (0.4.6)\n",
            "Requirement already satisfied: charset-normalizer<3.0,>=2.0 in /usr/local/lib/python3.8/dist-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->gcsfs) (2.1.1)\n",
            "Requirement already satisfied: attrs>=17.3.0 in /usr/local/lib/python3.8/dist-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->gcsfs) (22.1.0)\n",
            "Requirement already satisfied: async-timeout<5.0,>=4.0.0a3 in /usr/local/lib/python3.8/dist-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->gcsfs) (4.0.2)\n",
            "Requirement already satisfied: multidict<7.0,>=4.5 in /usr/local/lib/python3.8/dist-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->gcsfs) (6.0.3)\n",
            "Requirement already satisfied: frozenlist>=1.1.1 in /usr/local/lib/python3.8/dist-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->gcsfs) (1.3.3)\n",
            "Requirement already satisfied: yarl<2.0,>=1.0 in /usr/local/lib/python3.8/dist-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->gcsfs) (1.8.2)\n",
            "Requirement already satisfied: aiosignal>=1.1.2 in /usr/local/lib/python3.8/dist-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->gcsfs) (1.3.1)\n",
            "Requirement already satisfied: pyasn1-modules>=0.2.1 in /usr/local/lib/python3.8/dist-packages (from google-auth>=1.2->gcsfs) (0.2.8)\n",
            "Requirement already satisfied: six>=1.9.0 in /usr/local/lib/python3.8/dist-packages (from google-auth>=1.2->gcsfs) (1.15.0)\n",
            "Requirement already satisfied: cachetools<6.0,>=2.0.0 in /usr/local/lib/python3.8/dist-packages (from google-auth>=1.2->gcsfs) (5.2.0)\n",
            "Requirement already satisfied: rsa<5,>=3.1.4 in /usr/local/lib/python3.8/dist-packages (from google-auth>=1.2->gcsfs) (4.9)\n",
            "Requirement already satisfied: pyasn1<0.5.0,>=0.4.6 in /usr/local/lib/python3.8/dist-packages (from pyasn1-modules>=0.2.1->google-auth>=1.2->gcsfs) (0.4.8)\n",
            "Requirement already satisfied: idna>=2.0 in /usr/local/lib/python3.8/dist-packages (from yarl<2.0,>=1.0->aiohttp!=4.0.0a0,!=4.0.0a1->gcsfs) (2.10)\n",
            "Requirement already satisfied: requests-oauthlib>=0.7.0 in /usr/local/lib/python3.8/dist-packages (from google-auth-oauthlib->gcsfs) (1.3.1)\n",
            "Requirement already satisfied: oauthlib>=3.0.0 in /usr/local/lib/python3.8/dist-packages (from requests-oauthlib>=0.7.0->google-auth-oauthlib->gcsfs) (3.2.2)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.8/dist-packages (from requests->gcsfs) (2022.9.24)\n",
            "Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.8/dist-packages (from requests->gcsfs) (1.24.3)\n",
            "Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.8/dist-packages (from requests->gcsfs) (3.0.4)\n",
            "Requirement already satisfied: google-api-core!=2.0.*,!=2.1.*,!=2.2.*,!=2.3.0,<3.0.0dev,>=1.31.5 in /usr/local/lib/python3.8/dist-packages (from google-cloud-storage->gcsfs) (2.8.2)\n",
            "Requirement already satisfied: google-resumable-media>=2.3.2 in /usr/local/lib/python3.8/dist-packages (from google-cloud-storage->gcsfs) (2.4.0)\n",
            "Requirement already satisfied: google-cloud-core<3.0dev,>=2.3.0 in /usr/local/lib/python3.8/dist-packages (from google-cloud-storage->gcsfs) (2.3.2)\n",
            "Requirement already satisfied: protobuf<5.0.0dev,>=3.15.0 in /usr/local/lib/python3.8/dist-packages (from google-api-core!=2.0.*,!=2.1.*,!=2.2.*,!=2.3.0,<3.0.0dev,>=1.31.5->google-cloud-storage->gcsfs) (3.19.6)\n",
            "Requirement already satisfied: googleapis-common-protos<2.0dev,>=1.56.2 in /usr/local/lib/python3.8/dist-packages (from google-api-core!=2.0.*,!=2.1.*,!=2.2.*,!=2.3.0,<3.0.0dev,>=1.31.5->google-cloud-storage->gcsfs) (1.57.0)\n",
            "Requirement already satisfied: google-crc32c<2.0dev,>=1.0 in /usr/local/lib/python3.8/dist-packages (from google-resumable-media>=2.3.2->google-cloud-storage->gcsfs) (1.5.0)\n",
            "Installing collected packages: gcsfs\n",
            "Successfully installed gcsfs-2022.11.0\n",
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Collecting pandera\n",
            "  Downloading pandera-0.13.4-py3-none-any.whl (122 kB)\n",
            "\u001b[K     |████████████████████████████████| 122 kB 4.2 MB/s \n",
            "\u001b[?25hCollecting typing-inspect>=0.6.0\n",
            "  Downloading typing_inspect-0.8.0-py3-none-any.whl (8.7 kB)\n",
            "Requirement already satisfied: numpy>=1.19.0 in /usr/local/lib/python3.8/dist-packages (from pandera) (1.21.6)\n",
            "Requirement already satisfied: wrapt in /usr/local/lib/python3.8/dist-packages (from pandera) (1.14.1)\n",
            "Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.8/dist-packages (from pandera) (21.3)\n",
            "Requirement already satisfied: pandas>=1.2.0 in /usr/local/lib/python3.8/dist-packages (from pandera) (1.3.5)\n",
            "Requirement already satisfied: pydantic in /usr/local/lib/python3.8/dist-packages (from pandera) (1.10.2)\n",
            "Requirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /usr/local/lib/python3.8/dist-packages (from packaging>=20.0->pandera) (3.0.9)\n",
            "Requirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.8/dist-packages (from pandas>=1.2.0->pandera) (2.8.2)\n",
            "Requirement already satisfied: pytz>=2017.3 in /usr/local/lib/python3.8/dist-packages (from pandas>=1.2.0->pandera) (2022.6)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.8/dist-packages (from python-dateutil>=2.7.3->pandas>=1.2.0->pandera) (1.15.0)\n",
            "Collecting mypy-extensions>=0.3.0\n",
            "  Downloading mypy_extensions-0.4.3-py2.py3-none-any.whl (4.5 kB)\n",
            "Requirement already satisfied: typing-extensions>=3.7.4 in /usr/local/lib/python3.8/dist-packages (from typing-inspect>=0.6.0->pandera) (4.4.0)\n",
            "Installing collected packages: mypy-extensions, typing-inspect, pandera\n",
            "Successfully installed mypy-extensions-0.4.3 pandera-0.13.4 typing-inspect-0.8.0\n"
          ]
        }
      ],
      "source": [
        "#Pyspark e Google Cloud Storage File System\n",
        "!pip install pyspark\n",
        "!pip install gcsfs\n",
        "!pip install pandera"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#⚡2 **Importação**"
      ],
      "metadata": {
        "id": "dRp2gnDoo1n2"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Importando Google Drive\n",
        "\n",
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "kSUmLhHlo48p",
        "outputId": "9c69e384-0289-4f75-ab28-67cc790a74fd"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/drive\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Importando bibliotecas\n",
        "\n",
        "from pyspark.sql import SparkSession\n",
        "import pyspark.sql.functions as F\n",
        "from pyspark.sql.types import *\n",
        "import pandera as pa\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "from google.cloud import storage\n",
        "import os"
      ],
      "metadata": {
        "id": "q3huBVmBrgTT"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "#⚡3 **Conexão Google Cloud Storage**"
      ],
      "metadata": {
        "id": "pqSVRAaLDhLS"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "###✅ *3.1  Setando Chave de segurança*"
      ],
      "metadata": {
        "id": "IlH1pDqOpG3l"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "serviceAccount='/content/drive/MyDrive/Colab Notebooks/bc26-aulas-f74158c47534.json'\n",
        "os.environ['GOOGLE_APPLICATION_CREDENTIALS'] = serviceAccount"
      ],
      "metadata": {
        "id": "2V9Qlfvso7w0"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "##✅ *3.2 Apontando a Bucket*"
      ],
      "metadata": {
        "id": "rvyDrVZaDwQ2"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "storage.Client().get_bucket('ed7-datasets').blob('spotify.csv')\n",
        "\n",
        "#caminho\n",
        "path = 'gs://ed7-datasets/spotify.csv'"
      ],
      "metadata": {
        "id": "m1LwPz3ppNdc"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "#⚡4 **Configurando Spark**"
      ],
      "metadata": {
        "id": "zwl_s0a6pSML"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "spark = (\n",
        "    SparkSession.builder\n",
        "                .master('local')\n",
        "                .appName('gcsfs')\n",
        "                .config('spark.ui.port', '4050')\n",
        "                .config(\"spark.jars\", 'https://storage.googleapis.com/hadoop-lib/gcs/gcs-connector-hadoop2-latest.jar')\n",
        "                .getOrCreate()\n",
        ")"
      ],
      "metadata": {
        "id": "VSzz5RWbpT9P"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "#⚡5 **Pré-análise do csv**"
      ],
      "metadata": {
        "id": "-VwFq9GirsUC"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Esse conjunto de dados é sobre detalhes de músicas ouvidas no spotify.**\n",
        "\n",
        "A lista completa de gêneros incluídos no CSV são Trap, Techno, Techhouse, Trance, Psytrance, Dark Trap, DnB (bateria e baixo), Hardstyle, Underground Rap, Trap Metal, Emo, Rap, RnB, Pop e Hiphop.\n",
        "\n",
        "\n",
        "**Cada coluna é um detalhe diferente:**\n",
        "\n",
        "\n",
        "1. **\"song_name\"**: Nome da música\n",
        "2. **\"song_popularity\"**: Classificação por audiência | popularidade\n",
        "3. **\"song_duration_ms\"**: Duração da música em milisegundos\n",
        "4. **\"acousticness\"**: Medida confiabilidade de ser acústica de 0.0 a 1.0\n",
        "5. **\"danceability\"**: Capacidade de a música provocar a dança numa escala de 0.0 para pouco dançável a 1.0 mais dançável\n",
        "6. **\"energy\"**: O quanto uma música é energética numa escala de 0.0 a 1.0\n",
        "7. **\"instrumentalness\"**: Não possuir conteúdo vocal como \"Aah\" | \"Ooh\" numa escala de 0.0 a 1.0\n",
        "8. **\"key\"**: detecção de nota musical. Se nenhuma nota for detectada é atribuído -1\n",
        "9. **\"liveness\"**: Uma medição que detecta se a música foi gravada ao vivo\n",
        "10. **\"loudness\"**: Volume da música em decibéis (dB)\n",
        "11. **\"audio_mode\"**:Indica a modalidade (maior ou menor) da música.Se maior é atribuido 1, senão 0 para menor\n",
        "12. **\"speechiness\"**: Detecta a presença de palavras faladas dentro da música, quanto mais voltada pra fala (podcast,entrevistas...),mais próxima de 1.0. Valores acima de 0.66 descrevem faixas que provavelmente são feitas APENAS de discursos\n",
        "13. **\"tempo\"**: ritmo musical em batidas por minuto (BPM)\n",
        "14. **\"time_signature\"**: Assinatura de tempo. Especifica quantas batidas (pulsos) estão em cada barra(segmento de tempo dividido regularmente)\n",
        "15. **\"audio_valence\"**: Valência de áudio. Se uma música se aproxima da 'positividade' 1.0 ou da 'negatividade' 0.0.\n",
        "\n",
        "\n",
        "Essas informações são encontradas [Aqui](https://storage.googleapis.com/ed7-datasets/Descri%C3%A7%C3%A3o%20das%20Features%20Spotify.jpeg)."
      ],
      "metadata": {
        "id": "co6igMpusAwm"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "#⚡6 **Lendo DataFrame**"
      ],
      "metadata": {
        "id": "RJpnGtjzpYTd"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "##✅ 6.1 Struct Type "
      ],
      "metadata": {
        "id": "b70shD2uursh"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Vou realizar um pré-tratamento dos dados utilizando uma Struct Type**\n",
        "\n",
        "**A Struct Type já faz o rename dos header das colunas e também já trata como nulos os dados que não estão de acordo com o tipo da coluna.**"
      ],
      "metadata": {
        "id": "2hAtViKZuxUX"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "esquema = StructType([\n",
        "    StructField('id',IntegerType()),\n",
        "    StructField('nome_musica',StringType()),\n",
        "    StructField('popularidade',FloatType()),\n",
        "    StructField('duracao', IntegerType()),\n",
        "    StructField('acustica', StringType()),\n",
        "    StructField('danceabilidade', StringType()),\n",
        "    StructField('energia', FloatType()),\n",
        "    StructField('instrumentalidade', FloatType()),\n",
        "    StructField('nota_musical', IntegerType()),\n",
        "    StructField('ao_vivo', FloatType()),\n",
        "    StructField('volume', FloatType()),\n",
        "    StructField('modo_audio', IntegerType()),\n",
        "    StructField('discurso', FloatType()),\n",
        "    StructField('ritmo', FloatType()),\n",
        "    StructField('assinatura_de_tempo', FloatType()),\n",
        "    StructField('valencia', FloatType())\n",
        "    \n",
        "])"
      ],
      "metadata": {
        "id": "tn5alnvCuwyG"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df = spark.read.format('csv').option('header','true').option('inferschema','true').load(path,schema = esquema,sep=',')\n"
      ],
      "metadata": {
        "id": "8xRblLIjo1Jw"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "#⚡7 **Pré análise do Data Frame**"
      ],
      "metadata": {
        "id": "XvoGV6Q83L3k"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Inconsistências:**\n",
        "\n",
        "* acustica: Valores nulos apresentados e arrendodamento  OK\n",
        "\n",
        "solução: converter pra String no Struct Type e verificar qual é a inconsistência\n",
        "\n",
        "Descoberta: kg como inconsistência\n",
        "\n",
        "* danceabilildade: Valores nulos apresentados e arrendodamento  OK\n",
        "\n",
        "solução: converter pra String no Struct Type  e verificar qual é a inconsistência\n",
        "\n",
        "Descoberta: mol/L como inconsistência"
      ],
      "metadata": {
        "id": "wbakriEE5cJs"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Data Frame\n",
        "df.show(truncate=False)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CsZ9QQ9Er6Vt",
        "outputId": "fce5ed07-74fb-45be-98ff-ab8206d53f82"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "+---+--------------------------+------------+-------+----------------------+-----------------------+-------+-----------------+------------+-------+------+----------+--------+-------+-------------------+--------+\n",
            "|id |nome_musica               |popularidade|duracao|acustica              |danceabilidade         |energia|instrumentalidade|nota_musical|ao_vivo|volume|modo_audio|discurso|ritmo  |assinatura_de_tempo|valencia|\n",
            "+---+--------------------------+------------+-------+----------------------+-----------------------+-------+-----------------+------------+-------+------+----------+--------+-------+-------------------+--------+\n",
            "|0  |Boulevard of Broken Dreams|73.0        |262333 |0.005520000000000001kg|0.496mol/L             |0.682  |2.94E-5          |8           |0.0589 |-4.095|1         |0.0294  |167.06 |4.0                |0.474   |\n",
            "|1  |In The End                |66.0        |216933 |0.0103kg              |0.542mol/L             |0.853  |0.0              |3           |0.108  |-6.407|0         |0.0498  |105.256|4.0                |0.37    |\n",
            "|2  |Seven Nation Army         |76.0        |231733 |0.00817kg             |0.737mol/L             |0.463  |0.447            |0           |0.255  |-7.828|1         |0.0792  |123.881|4.0                |0.324   |\n",
            "|3  |By The Way                |74.0        |216933 |0.0264kg              |0.451mol/L             |0.97   |0.00355          |0           |0.102  |-4.938|1         |0.107   |122.444|4.0                |0.198   |\n",
            "|4  |How You Remind Me         |56.0        |223826 |0.000954kg            |0.447mol/L             |0.766  |0.0              |10          |0.113  |-5.065|1         |0.0313  |172.011|4.0                |0.574   |\n",
            "|5  |Bring Me To Life          |80.0        |235893 |0.00895kg             |0.316mol/L             |0.945  |1.85E-6          |4           |0.396  |-3.169|0         |0.124   |189.931|4.0                |0.32    |\n",
            "|6  |Last Resort               |81.0        |199893 |0.000504kg            |0.581mol/L             |0.887  |0.00111          |4           |0.268  |-3.659|0         |0.0624  |90.578 |4.0                |0.724   |\n",
            "|7  |Are You Gonna Be My Girl  |76.0        |213800 |0.00148kg             |0.613mol/L             |0.953  |5.82E-4          |2           |0.152  |-3.435|1         |0.0855  |105.046|4.0                |0.537   |\n",
            "|8  |Mr. Brightside            |80.0        |222586 |0.00108kg             |0.33mol/L              |0.936  |0.0              |1           |0.0926 |-3.66 |1         |0.0917  |148.112|4.0                |0.234   |\n",
            "|9  |Sex on Fire               |81.0        |203346 |0.00172kg             |0.542mol/L             |0.905  |0.0104           |9           |0.136  |-5.653|1         |0.054   |153.398|4.0                |0.374   |\n",
            "|10 |The Middle                |78.0        |168253 |0.0424kg              |0.629mol/L             |0.897  |0.0              |2           |0.263  |-3.401|1         |0.0483  |161.944|4.0                |0.93    |\n",
            "|11 |Numb                      |63.0        |185586 |0.0046kg              |0.496mol/L             |0.863  |0.0              |9           |0.639  |-4.153|1         |0.0381  |110.018|4.0                |0.243   |\n",
            "|12 |Smooth Criminal           |75.0        |209266 |0.00434kg             |0.647mol/L             |0.964  |0.0036           |9           |0.15   |-4.225|0         |0.06    |126.942|4.0                |0.875   |\n",
            "|13 |Can't Stop                |81.0        |269000 |0.0179kg              |0.618mol/L             |0.938  |0.0              |9           |0.167  |-3.442|1         |0.0456  |91.455 |4.0                |0.875   |\n",
            "|14 |Chop Suey!                |69.0        |210240 |0.000353kg            |0.42mol/L              |0.929  |7.47E-4          |7           |0.122  |-3.899|0         |0.121   |127.204|4.0                |0.3     |\n",
            "|15 |Take Me Out               |77.0        |237026 |0.000423kg            |0.278mol/L             |0.676  |8.99E-4          |9           |0.136  |-8.821|1         |0.0371  |104.545|4.0                |0.494   |\n",
            "|16 |I Miss You                |71.0        |227240 |0.00136kg             |0.659mol/L             |0.778  |6.79E-6          |11          |0.0841 |-6.423|1         |0.0379  |110.022|4.0                |0.623   |\n",
            "|17 |Best of You               |62.0        |256600 |0.00701kg             |0.37mol/L              |0.944  |2.9E-6           |1           |0.135  |-4.979|0         |0.0767  |130.315|4.0                |0.345   |\n",
            "|18 |I Write Sins Not Tragedies|77.0        |187613 |0.0938kg              |0.5670000000000001mol/L|0.795  |0.0              |9           |0.114  |-4.985|0         |0.134   |170.06 |4.0                |0.635   |\n",
            "|19 |Kryptonite                |79.0        |233933 |0.006640000000000001kg|0.545mol/L             |0.865  |1.12E-5          |11          |0.168  |-5.708|0         |0.0286  |99.01  |4.0                |0.543   |\n",
            "+---+--------------------------+------------+-------+----------------------+-----------------------+-------+-----------------+------------+-------+------+----------+--------+-------+-------------------+--------+\n",
            "only showing top 20 rows\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Quantidade de linhas\n",
        "df.count()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "kehPqWdBOZXd",
        "outputId": "a6d3fe72-c23f-4c66-8fda-c57259042056"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "18835"
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Quantidade de linhas distintas\n",
        "\n",
        "df.distinct().count()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bCPpBHrKO0hM",
        "outputId": "1f0d0a7d-549d-404b-90e1-a4ead184d6db"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "18835"
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Quantidade de Colunas\n",
        "len(df.columns)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-dI_Ut1dOfid",
        "outputId": "cadb73b4-c448-451d-e168-7ac6738a033b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "16"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##✅ 7.1 Tipo | Nome das colunas"
      ],
      "metadata": {
        "id": "f8yZtJkrykSW"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Inconsistências:**\n",
        "\n",
        "\n",
        "* `energia: arrendodamento`  \n",
        "\n",
        "* `instrumentalidade: arrendodamento`  \n",
        "\n",
        "* `discurso: arrendodamento`  \n",
        "\n",
        "* `Verificar a necessidade do time_signature`  \n",
        "\n",
        "* `valencia:  arrendodamento`  \n",
        "\n",
        "* `ao_vivo | volume :  arrendodamento`  \n",
        "\n"
      ],
      "metadata": {
        "id": "T1z21pqMGbt5"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.dtypes"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5ehVEFsbynrY",
        "outputId": "1a99e81b-ca51-4c80-b099-0b708f5326f4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[('id', 'int'),\n",
              " ('nome_musica', 'string'),\n",
              " ('popularidade', 'float'),\n",
              " ('duracao', 'int'),\n",
              " ('acustica', 'string'),\n",
              " ('danceabilidade', 'string'),\n",
              " ('energia', 'float'),\n",
              " ('instrumentalidade', 'float'),\n",
              " ('nota_musical', 'int'),\n",
              " ('ao_vivo', 'float'),\n",
              " ('volume', 'float'),\n",
              " ('modo_audio', 'int'),\n",
              " ('discurso', 'float'),\n",
              " ('ritmo', 'float'),\n",
              " ('assinatura_de_tempo', 'float'),\n",
              " ('valencia', 'float')]"
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##✅ 7.2 Analisando colunas"
      ],
      "metadata": {
        "id": "amiBSostD5Jr"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Inconsistências:**\n",
        "\n",
        "* `audio_mode: Coluna deve conter 0 ou 1.`\n",
        "\n",
        " Foi encontrado \n",
        "(0.105, -6.047999999999999 ) \n",
        "\n",
        "**Solução: Provável mudança pra valores nulos.** \n",
        "\n",
        "* `time_signature: verificar as seguintes assinaturas de tempo` \n",
        "\n",
        "(2800000000, 3 ,97.01, 4, 0)  \n",
        "\n",
        "**Solução: Provável mudança pra valores nulos.**"
      ],
      "metadata": {
        "id": "T6WZaiN-LCgw"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.orderBy(F.col('modo_audio').asc()).show(truncate = False)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "b5STeNtED7sm",
        "outputId": "cd4dab78-b8c9-476b-9186-84db882853c2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "+-----+-----------------------------------------------------------------+------------+-------+------------------------+-----------------------+-------+-----------------+------------+-------+------+----------+--------+-------+-------------------+--------+\n",
            "|id   |nome_musica                                                      |popularidade|duracao|acustica                |danceabilidade         |energia|instrumentalidade|nota_musical|ao_vivo|volume|modo_audio|discurso|ritmo  |assinatura_de_tempo|valencia|\n",
            "+-----+-----------------------------------------------------------------+------------+-------+------------------------+-----------------------+-------+-----------------+------------+-------+------+----------+--------+-------+-------------------+--------+\n",
            "|10528|\"Juntos (Together) - From \"\"McFarland                            |null        |44     |200466                  |0.0986kg               |null   |0.866            |null        |10.0   |0.341 |null      |0.0     |0.0324 |97.01              |4.0     |\n",
            "|6587 |Lhhc                                                             |48.0        |189985 |0.00732kg               |0.629mol/L             |0.993  |0.0              |7           |0.148  |-1.277|null      |0.214   |137.023|4.0                |0.329   |\n",
            "|1757 |Party In The U.S.A.                                              |null        |null   |0.519mol/L              |0.36                   |0.0    |10.0             |null        |-8.575 |0.0   |null      |97.42   |4.0    |0.7                |null    |\n",
            "|23   |Jerk It Out                                                      |62.0        |195666 |0.0171kg                |0.58mol/L              |0.981  |1.07E-5          |8           |0.386  |-2.603|0         |0.06    |134.007|4.0                |0.861   |\n",
            "|71   |Está Rico                                                        |83.0        |215151 |0.266kg                 |0.8170000000000001mol/L|0.74   |0.0              |11          |0.0992 |-4.566|0         |0.283   |130.04 |4.0                |0.674   |\n",
            "|26   |Blurry                                                           |28.0        |303920 |0.0102kg                |0.44mol/L              |0.932  |0.0              |3           |0.142  |-4.488|0         |0.0584  |157.438|4.0                |0.495   |\n",
            "|31   |Like a Stone                                                     |77.0        |293960 |0.00797kg               |0.614mol/L             |0.568  |0.0              |7           |0.0997 |-5.477|0         |0.0276  |107.849|4.0                |0.516   |\n",
            "|43   |Down With the Sickness                                           |73.0        |279213 |0.000996kg              |0.695mol/L             |0.876  |6.89E-6          |3           |0.106  |-4.262|0         |0.0553  |89.954 |4.0                |0.941   |\n",
            "|48   |I Bet You Look Good On The Dancefloor                            |63.0        |173680 |0.00225kg               |0.535mol/L             |0.948  |0.0              |6           |0.376  |-4.19 |0         |0.0356  |103.183|4.0                |0.778   |\n",
            "|1    |In The End                                                       |66.0        |216933 |0.0103kg                |0.542mol/L             |0.853  |0.0              |3           |0.108  |-6.407|0         |0.0498  |105.256|4.0                |0.37    |\n",
            "|55   |The Red                                                          |71.0        |238400 |0.000671kg              |0.509mol/L             |0.843  |8.03E-4          |1           |0.348  |-3.318|0         |0.0488  |140.055|3.0                |0.332   |\n",
            "|42   |The Diary of Jane - Single Version                               |69.0        |200546 |5.53e-05kg              |0.374mol/L             |0.961  |0.0834           |10          |0.138  |-4.421|0         |0.0851  |167.032|4.0                |0.357   |\n",
            "|59   |Judith                                                           |66.0        |247266 |3.32e-05kg              |0.365mol/L             |0.894  |0.171            |11          |0.267  |-4.682|0         |0.0572  |82.305 |3.0                |0.31    |\n",
            "|5    |Bring Me To Life                                                 |80.0        |235893 |0.00895kg               |0.316mol/L             |0.945  |1.85E-6          |4           |0.396  |-3.169|0         |0.124   |189.931|4.0                |0.32    |\n",
            "|12   |Smooth Criminal                                                  |75.0        |209266 |0.00434kg               |0.647mol/L             |0.964  |0.0036           |9           |0.15   |-4.225|0         |0.06    |126.942|4.0                |0.875   |\n",
            "|51   |Crawling In The Dark                                             |61.0        |175026 |0.000295kg              |0.5920000000000001mol/L|0.932  |7.59E-5          |6           |0.138  |-4.491|0         |0.0885  |93.675 |4.0                |0.698   |\n",
            "|17   |Best of You                                                      |62.0        |256600 |0.00701kg               |0.37mol/L              |0.944  |2.9E-6           |1           |0.135  |-4.979|0         |0.0767  |130.315|4.0                |0.345   |\n",
            "|19   |Kryptonite                                                       |79.0        |233933 |0.006640000000000001kg  |0.545mol/L             |0.865  |1.12E-5          |11          |0.168  |-5.708|0         |0.0286  |99.01  |4.0                |0.543   |\n",
            "|58   |Change (In the House of Flies) - In The House Of Flies LP Version|69.0        |299533 |0.00024900000000000004kg|0.269mol/L             |0.853  |2.46E-4          |7           |0.118  |-4.647|0         |0.0854  |141.581|4.0                |0.179   |\n",
            "|33   |I Hate Everything About You                                      |75.0        |231480 |0.00461kg               |0.498mol/L             |0.83   |0.0              |6           |0.139  |-5.157|0         |0.0421  |89.342 |4.0                |0.453   |\n",
            "+-----+-----------------------------------------------------------------+------------+-------+------------------------+-----------------------+-------+-----------------+------------+-------+------+----------+--------+-------+-------------------+--------+\n",
            "only showing top 20 rows\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Valores distintos\n",
        "\n",
        "df.select('modo_audio').distinct().show(truncate=False)\n",
        "\n",
        "df.select('assinatura_de_tempo').distinct().show(truncate=False)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jjTBbDpcJoK3",
        "outputId": "141a8084-9f3d-40a8-dafe-d1568344276d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "+----------+\n",
            "|modo_audio|\n",
            "+----------+\n",
            "|null      |\n",
            "|1         |\n",
            "|0         |\n",
            "+----------+\n",
            "\n",
            "+-------------------+\n",
            "|assinatura_de_tempo|\n",
            "+-------------------+\n",
            "|5.0                |\n",
            "|null               |\n",
            "|3.0                |\n",
            "|97.01              |\n",
            "|1.0                |\n",
            "|4.0                |\n",
            "|2.8E9              |\n",
            "|0.0                |\n",
            "|0.7                |\n",
            "+-------------------+\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#⚡8 **Tratamento | Limpeza**"
      ],
      "metadata": {
        "id": "gh5KBKyby5Ol"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "##✅ 8.1 Backup"
      ],
      "metadata": {
        "id": "SZ-TVMGUy8xP"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df_backup = df"
      ],
      "metadata": {
        "id": "EgeZuYiZy9_E"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "##✅ 8.2 Renomeando colunas"
      ],
      "metadata": {
        "id": "kT9OJopLzEbs"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df = ( df.withColumnRenamed('_c0','id')\n",
        "          .withColumnRenamed('song_name','nome_musica')\n",
        "          .withColumnRenamed('song_popularity','popularidade')\n",
        "          .withColumnRenamed('song_duration_ms','duracao')\n",
        "          .withColumnRenamed('acousticness','acustica')\n",
        "          .withColumnRenamed('danceability','danceabilidade')\n",
        "          .withColumnRenamed('energy','energia')\n",
        "          .withColumnRenamed('instrumentalness','instrumentalidade')\n",
        "          .withColumnRenamed('key','nota_musical')\n",
        "          .withColumnRenamed('liveness','ao_vivo')\n",
        "          .withColumnRenamed('loudness','volume')\n",
        "          .withColumnRenamed('audio_mode','modo_audio')\n",
        "          .withColumnRenamed('speechiness','discurso')\n",
        "          .withColumnRenamed('tempo','ritmo')\n",
        "          .withColumnRenamed('time_signature','assinatura_de_tempo')\n",
        "          .withColumnRenamed('audio_valence','valencia') )\n",
        "\n",
        "df.show()"
      ],
      "metadata": {
        "id": "w16JLZ1ey7mb"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "##✅ 8.3 Removendo inconsistências"
      ],
      "metadata": {
        "id": "rMQkpEyRPiqA"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "###✅ 8.3.1 Coluna acustica"
      ],
      "metadata": {
        "id": "6Fb5xxmeVvhV"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Removendo KG \n",
        "\n",
        "df = df.withColumn('acustica',F.regexp_replace('acustica','kg',''))\n"
      ],
      "metadata": {
        "id": "sxyDcrLvVxd8"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Convertendo pra Float\n",
        "df = df.withColumn('acustica',F.round(F.col('acustica').cast('float'),2))"
      ],
      "metadata": {
        "id": "BhgijEH198F9"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "###✅ 8.3.2 Coluna duracao"
      ],
      "metadata": {
        "id": "3txZdbGpxPDg"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Removendo KG\n",
        "\n",
        "df = df.withColumn('duracao',F.regexp_replace('duracao','kg',''))"
      ],
      "metadata": {
        "id": "bdiNWCAUxQ9K"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "###✅ 8.3.3 Coluna danceabilidade"
      ],
      "metadata": {
        "id": "mWEP91s8VyNP"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Removendo mol/l\n",
        "df = df.withColumn('danceabilidade',F.regexp_replace('danceabilidade','mol/L',''))"
      ],
      "metadata": {
        "id": "tvKFufIZV1KE"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Convertendo pra Float\n",
        "df = df.withColumn('danceabilidade',F.round(F.col('danceabilidade').cast('float'),2)) "
      ],
      "metadata": {
        "id": "94hiOezd-Bk6"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "###✅ 8.3.4 Coluna modo_audio"
      ],
      "metadata": {
        "id": "jkU_QwtrngFh"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "**A coluna modo_audio deve conter 0 ou 1.**\n",
        "**Inconsistências:**\n",
        "\n",
        "(0.105, -6.047999999999999 , nao_sei)\n",
        "\n",
        "**Solução:** Vou converter para 'NA'\n",
        "\n"
      ],
      "metadata": {
        "id": "yO8niMwUpSfb"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Verificando antes do tratamento\n",
        "df.select('modo_audio').distinct().show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qEhy8c16qv1V",
        "outputId": "0d33a16e-42bd-40f1-82b8-b0a561d66ff4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "+----------+\n",
            "|modo_audio|\n",
            "+----------+\n",
            "|      null|\n",
            "|         1|\n",
            "|         0|\n",
            "+----------+\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df = (df.withColumn('modo_audio',F.regexp_replace('modo_audio','0.105',None))\n",
        "      .withColumn('modo_audio',F.regexp_replace('modo_audio','nao_sei',None))\n",
        "      .withColumn('modo_audio',F.regexp_replace('modo_audio','-6.047999999999999',None)))"
      ],
      "metadata": {
        "id": "jrJ2BY6Cnh6Q"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Verificando após tratamento\n",
        "df.select('modo_audio').distinct().show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8WRRk9KAqgEs",
        "outputId": "d8d815e6-1d52-403c-ef71-b1bf674cc8f6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "+----------+\n",
            "|modo_audio|\n",
            "+----------+\n",
            "|      null|\n",
            "+----------+\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "###✅ 8.3.5 Coluna assinatura_de_tempo"
      ],
      "metadata": {
        "id": "9b0dwRk5q1Yk"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "**foi encontrado inconsistências 'nao_sei' e verificar as seguintes assinaturas de tempo:**\n",
        "\n",
        " (2800000000, 3 ,97.01, 4, 0)\n",
        "\n",
        "\n",
        "\n",
        "**Solução ->** Vou substituir 2800000000 e 97.01 para 'NA' por parece bem absurdo exister esses compassos"
      ],
      "metadata": {
        "id": "19K51JJNq-1h"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Verificando antes do tratamento\n",
        "df.select('assinatura_de_tempo').distinct().show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "KoxE1OFcq4yX",
        "outputId": "6af5e125-a101-4d0f-fa89-0432f09e56cc"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "+-------------------+\n",
            "|assinatura_de_tempo|\n",
            "+-------------------+\n",
            "|                5.0|\n",
            "|               null|\n",
            "|                3.0|\n",
            "|              97.01|\n",
            "|                1.0|\n",
            "|                4.0|\n",
            "|              2.8E9|\n",
            "|                0.0|\n",
            "|                0.7|\n",
            "+-------------------+\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# tratamento\n",
        "df = (df.withColumn('assinatura_de_tempo',F.regexp_replace('assinatura_de_tempo','nao_sei','NA'))\n",
        "      .withColumn('assinatura_de_tempo',F.regexp_replace('assinatura_de_tempo','2800000000','NA'))\n",
        "      .withColumn('assinatura_de_tempo',F.regexp_replace('assinatura_de_tempo','97.01','NA')))"
      ],
      "metadata": {
        "id": "bwNZ0xusrX_G"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Verificando após do tratamento\n",
        "df.select('assinatura_de_tempo').distinct().show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "KlhcbXxJrhLL",
        "outputId": "d62a36a6-e389-414d-a309-ea338f793320"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "+-------------------+\n",
            "|assinatura_de_tempo|\n",
            "+-------------------+\n",
            "|                1.0|\n",
            "|              2.8E9|\n",
            "|                0.7|\n",
            "|                 NA|\n",
            "|               null|\n",
            "|                0.0|\n",
            "|                5.0|\n",
            "|                4.0|\n",
            "|                3.0|\n",
            "+-------------------+\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##✅ 8.4 Arrendodamento das colunas"
      ],
      "metadata": {
        "id": "KyCYb4CNPmha"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "\n",
        "df = (df.withColumn('acustica',F.round(F.col('acustica'),2)) \n",
        "        .withColumn('danceabilidade',F.round(F.col('danceabilidade'),2))\n",
        "        .withColumn('energia',F.round(F.col('energia'),2))\n",
        "        .withColumn('instrumentalidade',F.round(F.col('instrumentalidade'),2))\n",
        "        .withColumn('discurso',F.round(F.col('discurso'),2))\n",
        "        .withColumn('ao_vivo',F.round(F.col('ao_vivo'),2))\n",
        "        .withColumn('volume',F.round(F.col('volume'),2))\n",
        "        .withColumn('valencia',F.round(F.col('valencia'),2)))\n",
        "\n"
      ],
      "metadata": {
        "id": "byI_kvC-QBKe"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.show(truncate=False)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gOpPbDTcPl6W",
        "outputId": "01157281-65c1-45cb-fea6-58c598f5ced7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "+---+--------------------------+------------+-------+--------+--------------+-------+-----------------+------------+-------+------+----------+--------+-------+-------------------+--------+\n",
            "|id |nome_musica               |popularidade|duracao|acustica|danceabilidade|energia|instrumentalidade|nota_musical|ao_vivo|volume|modo_audio|discurso|ritmo  |assinatura_de_tempo|valencia|\n",
            "+---+--------------------------+------------+-------+--------+--------------+-------+-----------------+------------+-------+------+----------+--------+-------+-------------------+--------+\n",
            "|0  |Boulevard of Broken Dreams|73.0        |262333 |0.01    |0.5           |0.68   |0.0              |8           |0.06   |-4.09 |null      |0.03    |167.06 |4.0                |0.47    |\n",
            "|1  |In The End                |66.0        |216933 |0.01    |0.54          |0.85   |0.0              |3           |0.11   |-6.41 |null      |0.05    |105.256|4.0                |0.37    |\n",
            "|2  |Seven Nation Army         |76.0        |231733 |0.01    |0.74          |0.46   |0.45             |0           |0.25   |-7.83 |null      |0.08    |123.881|4.0                |0.32    |\n",
            "|3  |By The Way                |74.0        |216933 |0.03    |0.45          |0.97   |0.0              |0           |0.1    |-4.94 |null      |0.11    |122.444|4.0                |0.2     |\n",
            "|4  |How You Remind Me         |56.0        |223826 |0.0     |0.45          |0.77   |0.0              |10          |0.11   |-5.07 |null      |0.03    |172.011|4.0                |0.57    |\n",
            "|5  |Bring Me To Life          |80.0        |235893 |0.01    |0.32          |0.94   |0.0              |4           |0.4    |-3.17 |null      |0.12    |189.931|4.0                |0.32    |\n",
            "|6  |Last Resort               |81.0        |199893 |0.0     |0.58          |0.89   |0.0              |4           |0.27   |-3.66 |null      |0.06    |90.578 |4.0                |0.72    |\n",
            "|7  |Are You Gonna Be My Girl  |76.0        |213800 |0.0     |0.61          |0.95   |0.0              |2           |0.15   |-3.43 |null      |0.09    |105.046|4.0                |0.54    |\n",
            "|8  |Mr. Brightside            |80.0        |222586 |0.0     |0.33          |0.94   |0.0              |1           |0.09   |-3.66 |null      |0.09    |148.112|4.0                |0.23    |\n",
            "|9  |Sex on Fire               |81.0        |203346 |0.0     |0.54          |0.9    |0.01             |9           |0.14   |-5.65 |null      |0.05    |153.398|4.0                |0.37    |\n",
            "|10 |The Middle                |78.0        |168253 |0.04    |0.63          |0.9    |0.0              |2           |0.26   |-3.4  |null      |0.05    |161.944|4.0                |0.93    |\n",
            "|11 |Numb                      |63.0        |185586 |0.0     |0.5           |0.86   |0.0              |9           |0.64   |-4.15 |null      |0.04    |110.018|4.0                |0.24    |\n",
            "|12 |Smooth Criminal           |75.0        |209266 |0.0     |0.65          |0.96   |0.0              |9           |0.15   |-4.22 |null      |0.06    |126.942|4.0                |0.88    |\n",
            "|13 |Can't Stop                |81.0        |269000 |0.02    |0.62          |0.94   |0.0              |9           |0.17   |-3.44 |null      |0.05    |91.455 |4.0                |0.88    |\n",
            "|14 |Chop Suey!                |69.0        |210240 |0.0     |0.42          |0.93   |0.0              |7           |0.12   |-3.9  |null      |0.12    |127.204|4.0                |0.3     |\n",
            "|15 |Take Me Out               |77.0        |237026 |0.0     |0.28          |0.68   |0.0              |9           |0.14   |-8.82 |null      |0.04    |104.545|4.0                |0.49    |\n",
            "|16 |I Miss You                |71.0        |227240 |0.0     |0.66          |0.78   |0.0              |11          |0.08   |-6.42 |null      |0.04    |110.022|4.0                |0.62    |\n",
            "|17 |Best of You               |62.0        |256600 |0.01    |0.37          |0.94   |0.0              |1           |0.14   |-4.98 |null      |0.08    |130.315|4.0                |0.34    |\n",
            "|18 |I Write Sins Not Tragedies|77.0        |187613 |0.09    |0.57          |0.8    |0.0              |9           |0.11   |-4.99 |null      |0.13    |170.06 |4.0                |0.63    |\n",
            "|19 |Kryptonite                |79.0        |233933 |0.01    |0.55          |0.87   |0.0              |11          |0.17   |-5.71 |null      |0.03    |99.01  |4.0                |0.54    |\n",
            "+---+--------------------------+------------+-------+--------+--------------+-------+-----------------+------------+-------+------+----------+--------+-------+-------------------+--------+\n",
            "only showing top 20 rows\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##✅ 8.5 Analisando summary"
      ],
      "metadata": {
        "id": "e-AISMIm6kU4"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Inconsistência encontradas:**\n",
        "\n",
        "1. Valencia tem que ser em uma escala de 0 a 1. Há um dado apresentando 4.0 OK \n",
        "\n",
        "2. discurso também deve estar em uma escala de 0 a 1. Há um dado apresentando 97.42 OK\n",
        "\n",
        "3. acustica também. Há um dado apresentando 200466.0 OK"
      ],
      "metadata": {
        "id": "e_n9Myty5pzX"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.summary().show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LSVkB5lN5eQL",
        "outputId": "5b6b2ffd-abf1-45f8-d4ed-8e54b2923021"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "+-------+-----------------+--------------------+-----------------+------------------+------------------+-------------------+------------------+-------------------+------------------+-------------------+------------------+----------+-------------------+------------------+--------------------+-------------------+\n",
            "|summary|               id|         nome_musica|     popularidade|           duracao|          acustica|     danceabilidade|           energia|  instrumentalidade|      nota_musical|            ao_vivo|            volume|modo_audio|           discurso|             ritmo| assinatura_de_tempo|           valencia|\n",
            "+-------+-----------------+--------------------+-----------------+------------------+------------------+-------------------+------------------+-------------------+------------------+-------------------+------------------+----------+-------------------+------------------+--------------------+-------------------+\n",
            "|  count|            18835|               18835|            18833|             18833|             18834|              18834|             18833|              18833|             18833|              18831|             18834|         0|              18834|             18834|               18834|              18834|\n",
            "|   mean|           9417.0|  1326.2595454545456|52.99224765040089|218210.93123772103| 10.90224753097558| 0.6333545708786145| 0.645001858144762|0.07845059202030845| 5.288695375139383|0.17973076318607337|-7.446773921771397|      null|0.10729744043915251|121.06182791682978|  148679.15651781447| 0.5280492719293695|\n",
            "| stddev|5437.340495744833|   834.3509329079735|21.90671462144343|  59900.5312631349|1460.7264401038522|0.15674509775390996|0.2141789997034464|0.23321758340543702|3.6144605027975096|0.17298260276956662|3.8287122994033718|      null| 0.7167694462921951|28.739884660942607|2.0403199568644196E7|0.24590439377368367|\n",
            "|    min|                0|\"\"\"40\"\" - Live Ve...|              0.0|            100026|               0.0|                0.0|               0.0|                0.0|                 0|              -8.57|            -38.77|      null|                0.0|               0.0|                 0.0|                0.0|\n",
            "|    25%|             4707|               426.0|             40.0|          184320.0|              0.02|               0.53|              0.51|                0.0|                 2|               0.09|             -9.05|      null|               0.04|            98.359|                 4.0|               0.34|\n",
            "|    50%|             9416|              1942.0|             56.0|          211306.0|              0.13|               0.64|              0.67|                0.0|                 5|               0.12|             -6.56|      null|               0.06|           120.013|                 4.0|               0.53|\n",
            "|    75%|            14124|              1985.0|             69.0|          242840.0|              0.42|               0.75|              0.81|                0.0|                 8|               0.22|             -4.91|      null|               0.12|           139.928|                 4.0|               0.73|\n",
            "|    max|            18834|          피 땀 눈물|            100.0|             99775|          200466.0|               0.99|               1.0|               10.0|                11|               10.0|              1.59|      null|              97.42|           242.318|                  NA|                4.0|\n",
            "+-------+-----------------+--------------------+-----------------+------------------+------------------+-------------------+------------------+-------------------+------------------+-------------------+------------------+----------+-------------------+------------------+--------------------+-------------------+\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "####✅ 8.5.1 Coluna valencia "
      ],
      "metadata": {
        "id": "SBo6jNcF6yYB"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        " Valor 4.0 desproporcional ao intervalo padrão da coluna de 0.0 a 1.0.\n",
        "\n",
        "**Solução:** substituir valor para NA"
      ],
      "metadata": {
        "id": "VaHb1piB62bn"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df = df.withColumn('valencia',F.regexp_replace('valencia','4.0','NA'))"
      ],
      "metadata": {
        "id": "enwhoOac61px"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "###✅ 8.5.2 Coluna discurso"
      ],
      "metadata": {
        "id": "Xa1V23lm8SZX"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Valor 97.42 desproporcional ao intervalo padrão da coluna de 0.0 a 1.0.\n",
        "\n",
        "**Solução:** substituir valor para NA"
      ],
      "metadata": {
        "id": "RcWTZ8TN8YHp"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df = df.withColumn('discurso',F.regexp_replace('discurso','97','NA'))"
      ],
      "metadata": {
        "id": "_UUW8bBX8UR0"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "###✅ 8.5.3 Coluna acustica"
      ],
      "metadata": {
        "id": "5QV5A2CC8ucL"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Segundo tratamento na coluna.** Valor 200466.0 desproporcional ao intervalo padrão da coluna de 0.0 a 1.0.\n",
        "\n",
        "**Solução:** substituir valor para NA"
      ],
      "metadata": {
        "id": "dOfbtIi88yBU"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df = df.withColumn('acustica',F.regexp_replace('acustica','200466.0','NA'))"
      ],
      "metadata": {
        "id": "OSNVJqaT8wTt"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "##✅ 8.6 Removendo dados duplicados"
      ],
      "metadata": {
        "id": "dpLUwZdD1qVP"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Percebi que a coluna 'id' está permitindo informações redundantes. Por isso vou dropá-la!**"
      ],
      "metadata": {
        "id": "0IAet9gH2uhl"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.filter(F.col('popularidade')==100).show()"
      ],
      "metadata": {
        "id": "tI5i_d7-3MeG",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "d3e0dd5b-9dba-4f30-ac91-f5022913ed29"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "+-----+-----------+------------+-------+--------+--------------+-------+-----------------+------------+-------+------+----------+--------+-------+-------------------+--------+\n",
            "|   id|nome_musica|popularidade|duracao|acustica|danceabilidade|energia|instrumentalidade|nota_musical|ao_vivo|volume|modo_audio|discurso|  ritmo|assinatura_de_tempo|valencia|\n",
            "+-----+-----------+------------+-------+--------+--------------+-------+-----------------+------------+-------+------+----------+--------+-------+-------------------+--------+\n",
            "| 4299|    Happier|       100.0| 214289|    0.19|          0.69|   0.79|              0.0|           5|   0.17| -2.75|      null|    0.05|100.015|                4.0|    0.67|\n",
            "| 5593|    Happier|       100.0| 214289|    0.19|          0.69|   0.79|              0.0|           5|   0.17| -2.75|      null|    0.05|100.015|                4.0|    0.67|\n",
            "| 7568|    Happier|       100.0| 214289|    0.19|          0.69|   0.79|              0.0|           5|   0.17| -2.75|      null|    0.05|100.015|                4.0|    0.67|\n",
            "| 7636|    Happier|       100.0| 214289|    0.19|          0.69|   0.79|              0.0|           5|   0.17| -2.75|      null|    0.05|100.015|                4.0|    0.67|\n",
            "|11665|    Happier|       100.0| 214289|    0.19|          0.69|   0.79|              0.0|           5|   0.17| -2.75|      null|    0.05|100.015|                4.0|    0.67|\n",
            "|11697|    Happier|       100.0| 214289|    0.19|          0.69|   0.79|              0.0|           5|   0.17| -2.75|      null|    0.05|100.015|                4.0|    0.67|\n",
            "|14176|    Happier|       100.0| 214289|    0.19|          0.69|   0.79|              0.0|           5|   0.17| -2.75|      null|    0.05|100.015|                4.0|    0.67|\n",
            "|15091|    Happier|       100.0| 214289|    0.19|          0.69|   0.79|              0.0|           5|   0.17| -2.75|      null|    0.05|100.015|                4.0|    0.67|\n",
            "|16497|    Happier|       100.0| 214289|    0.19|          0.69|   0.79|              0.0|           5|   0.17| -2.75|      null|    0.05|100.015|                4.0|    0.67|\n",
            "|17392|    Happier|       100.0| 214289|    0.19|          0.69|   0.79|              0.0|           5|   0.17| -2.75|      null|    0.05|100.015|                4.0|    0.67|\n",
            "|17590|    Happier|       100.0| 214289|    0.19|          0.69|   0.79|              0.0|           5|   0.17| -2.75|      null|    0.05|100.015|                4.0|    0.67|\n",
            "|17638|    Happier|       100.0| 214289|    0.19|          0.69|   0.79|              0.0|           5|   0.17| -2.75|      null|    0.05|100.015|                4.0|    0.67|\n",
            "+-----+-----------+------------+-------+--------+--------------+-------+-----------------+------------+-------+------+----------+--------+-------+-------------------+--------+\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Quantidade de linhas repetidas\n",
        "\n",
        "print(df.distinct().count() - df.drop(F.col('id')).distinct().count(), 'Linhas Repetidas')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "eMP8WhBLKawn",
        "outputId": "b25cb11c-3a62-4f20-8bbd-041976850ec8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "3903 Linhas Repetidas\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "###✅ 8.6.1 Dropando 'id'"
      ],
      "metadata": {
        "id": "CHOa_pmI25Ro"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df = df.drop('id')"
      ],
      "metadata": {
        "id": "me-X7VxQ26rw"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "###✅ 8.6.2 Removendo dados duplicados"
      ],
      "metadata": {
        "id": "KGzaVXwK3GpE"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df = df.distinct()"
      ],
      "metadata": {
        "id": "h2OPnsVI1tcu"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "#⚡9 **Análises gerais propostas**"
      ],
      "metadata": {
        "id": "bS3v3USvyXDg"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "##✅ 9.1 Primeira"
      ],
      "metadata": {
        "id": "vQnITozpybDp"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Qual é a música mais popular?\n",
        "\n",
        "# verificando máxima popularidade\n",
        "\n",
        "df.agg({'popularidade': 'max'}).show()\n",
        "\n",
        "# filtro\n",
        "\n",
        "df.filter(F.col('popularidade')==100).show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9UFUTqY6ycwG",
        "outputId": "f1ed6ef4-5e99-49c3-abbc-10c4d8c3b1e7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "+-----------------+\n",
            "|max(popularidade)|\n",
            "+-----------------+\n",
            "|            100.0|\n",
            "+-----------------+\n",
            "\n",
            "+-----------+------------+-------+--------+--------------+-------+-----------------+------------+-------+------+----------+--------+-------+-------------------+--------+\n",
            "|nome_musica|popularidade|duracao|acustica|danceabilidade|energia|instrumentalidade|nota_musical|ao_vivo|volume|modo_audio|discurso|  ritmo|assinatura_de_tempo|valencia|\n",
            "+-----------+------------+-------+--------+--------------+-------+-----------------+------------+-------+------+----------+--------+-------+-------------------+--------+\n",
            "|    Happier|       100.0| 214289|    0.19|          0.69|   0.79|              0.0|           5|   0.17| -2.75|      null|    0.05|100.015|                4.0|    0.67|\n",
            "+-----------+------------+-------+--------+--------------+-------+-----------------+------------+-------+------+----------+--------+-------+-------------------+--------+\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##✅ 9.2 Convertendo DataFrame Pyspark para Pandas"
      ],
      "metadata": {
        "id": "y2S2DCWYlNQU"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Vou passar o Data Frame Pyspark para Pandas na finalidade de tratar os dados nulos e obter maior acertivade nas análises**"
      ],
      "metadata": {
        "id": "uSGLz8II-DE7"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df_pandas = df.toPandas()"
      ],
      "metadata": {
        "id": "vUfQ7Pju-MVm"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Tratamento\n",
        "df_pandas.replace('NA',np.NaN,inplace=True)"
      ],
      "metadata": {
        "id": "WAiQg90Q-Ztu"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Tratando coluna duracao\n",
        "df_pandas.duracao.replace('0.8220000000000001kg','0.8220000000000001',inplace=True)"
      ],
      "metadata": {
        "id": "tbuCHIxEx_GI"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Convertendo duracao pŕa Int\n",
        "df_pandas[['duracao']] = df_pandas[['duracao']].apply(pd.to_numeric) "
      ],
      "metadata": {
        "id": "FlkcIBfBw-e8"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df_pandas.dtypes"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "486LytHC-R9J",
        "outputId": "fd510237-8922-476f-cffc-da3e596b9b63"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "nome_musica             object\n",
              "popularidade           float32\n",
              "duracao                float64\n",
              "acustica                object\n",
              "danceabilidade         float32\n",
              "energia                float32\n",
              "instrumentalidade      float32\n",
              "nota_musical           float64\n",
              "ao_vivo                float32\n",
              "volume                 float32\n",
              "modo_audio              object\n",
              "discurso                object\n",
              "ritmo                  float32\n",
              "assinatura_de_tempo     object\n",
              "valencia                object\n",
              "dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 45
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "###✅ 9.2.1 Validação"
      ],
      "metadata": {
        "id": "g9nswDiIiGp5"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "schema = pa.DataFrameSchema(\n",
        "    columns = {\n",
        "        'nome_musica':pa.Column(pa.String),\n",
        "        'popularidade':pa.Column(pa.Float32,nullable=True),\n",
        "        'duracao':pa.Column(pa.Float,nullable=True),\n",
        "        'acustica':pa.Column(pa.Object,nullable=True),\n",
        "        'danceabilidade':pa.Column(pa.Float32,nullable=True),\n",
        "        'energia':pa.Column(pa.Float32,nullable=True),\n",
        "        'instrumentalidade':pa.Column(pa.Float32,nullable=True),\n",
        "        'nota_musical':pa.Column(pa.Float,nullable=True),\n",
        "        'ao_vivo':pa.Column(pa.Float32,nullable=True),\n",
        "        'volume':pa.Column(pa.Float32,nullable=True),\n",
        "        'modo_audio':pa.Column(pa.String,nullable=True),\n",
        "        'discurso':pa.Column(pa.Object,nullable=True),\n",
        "        'ritmo':pa.Column(pa.Float32,nullable=True),\n",
        "        'assinatura_de_tempo':pa.Column(pa.Object,nullable=True),\n",
        "        'valencia':pa.Column(pa.Object,nullable=True),\n",
        "       \n",
        "}\n",
        ")\n",
        "\n",
        "schema.validate(df_pandas)"
      ],
      "metadata": {
        "id": "wJjrZfYkj6uF",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 627
        },
        "outputId": "1d0e4ce6-ec14-401f-90b2-e1253dc8d8c0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                   nome_musica  popularidade   duracao  \\\n",
              "0                                     Insecure          53.0  191906.0   \n",
              "1       The Girl From Ipanema - Stereo Version          50.0  325506.0   \n",
              "2                                  Shop Around          54.0  170760.0   \n",
              "3      Just The Two Of Us (feat. Bill Withers)          65.0  237106.0   \n",
              "4           Boulder To Birmingham - Remastered          48.0  213026.0   \n",
              "...                                        ...           ...       ...   \n",
              "14927                                     Easy          75.0  256426.0   \n",
              "14928                                Betterman          34.0  206153.0   \n",
              "14929                     Ah, It's a Love Song          32.0  201000.0   \n",
              "14930                                      Try          65.0  247906.0   \n",
              "14931                       Caught Me a Rhythm          53.0  198367.0   \n",
              "\n",
              "      acustica  danceabilidade  energia  instrumentalidade  nota_musical  \\\n",
              "0         0.37            0.48     0.69               0.00          10.0   \n",
              "1         0.89            0.66     0.12               0.00           5.0   \n",
              "2          0.8            0.56     0.69               0.00           7.0   \n",
              "3         0.58            0.80     0.49               0.06           1.0   \n",
              "4         0.78            0.48     0.32               0.00          10.0   \n",
              "...        ...             ...      ...                ...           ...   \n",
              "14927     0.15            0.60     0.35               0.00          10.0   \n",
              "14928     0.01            0.62     0.49               0.00           5.0   \n",
              "14929     0.02            0.51     0.87               0.00          10.0   \n",
              "14930      0.0            0.67     0.63               0.00           2.0   \n",
              "14931     0.06            0.71     0.72               0.00           1.0   \n",
              "\n",
              "       ao_vivo     volume modo_audio discurso       ritmo assinatura_de_tempo  \\\n",
              "0         0.08  -3.230000       None     0.17  185.501999                 4.0   \n",
              "1         0.11 -19.200001       None     0.05  129.919006                 4.0   \n",
              "2         0.81  -4.490000       None     0.03  132.074997                 4.0   \n",
              "3         0.08  -9.300000       None     0.08   95.771004                 4.0   \n",
              "4         0.10 -10.950000       None     0.03  126.495003                 4.0   \n",
              "...        ...        ...        ...      ...         ...                 ...   \n",
              "14927     0.06 -15.060000       None     0.03  132.457001                 4.0   \n",
              "14928     0.12  -8.250000       None     0.03   77.977997                 4.0   \n",
              "14929     0.35  -3.370000       None     0.07  145.927002                 4.0   \n",
              "14930     0.09  -7.070000       None     0.03  103.998001                 4.0   \n",
              "14931     0.10  -3.560000       None     0.09   97.962997                 4.0   \n",
              "\n",
              "      valencia  \n",
              "0         0.55  \n",
              "1         0.36  \n",
              "2         0.89  \n",
              "3         0.62  \n",
              "4         0.31  \n",
              "...        ...  \n",
              "14927     0.34  \n",
              "14928     0.32  \n",
              "14929     0.61  \n",
              "14930     0.55  \n",
              "14931     0.54  \n",
              "\n",
              "[14932 rows x 15 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1d1fa2d4-64e7-4ead-884e-1a1dba360571\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>nome_musica</th>\n",
              "      <th>popularidade</th>\n",
              "      <th>duracao</th>\n",
              "      <th>acustica</th>\n",
              "      <th>danceabilidade</th>\n",
              "      <th>energia</th>\n",
              "      <th>instrumentalidade</th>\n",
              "      <th>nota_musical</th>\n",
              "      <th>ao_vivo</th>\n",
              "      <th>volume</th>\n",
              "      <th>modo_audio</th>\n",
              "      <th>discurso</th>\n",
              "      <th>ritmo</th>\n",
              "      <th>assinatura_de_tempo</th>\n",
              "      <th>valencia</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Insecure</td>\n",
              "      <td>53.0</td>\n",
              "      <td>191906.0</td>\n",
              "      <td>0.37</td>\n",
              "      <td>0.48</td>\n",
              "      <td>0.69</td>\n",
              "      <td>0.00</td>\n",
              "      <td>10.0</td>\n",
              "      <td>0.08</td>\n",
              "      <td>-3.230000</td>\n",
              "      <td>None</td>\n",
              "      <td>0.17</td>\n",
              "      <td>185.501999</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.55</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>The Girl From Ipanema - Stereo Version</td>\n",
              "      <td>50.0</td>\n",
              "      <td>325506.0</td>\n",
              "      <td>0.89</td>\n",
              "      <td>0.66</td>\n",
              "      <td>0.12</td>\n",
              "      <td>0.00</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.11</td>\n",
              "      <td>-19.200001</td>\n",
              "      <td>None</td>\n",
              "      <td>0.05</td>\n",
              "      <td>129.919006</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.36</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Shop Around</td>\n",
              "      <td>54.0</td>\n",
              "      <td>170760.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.56</td>\n",
              "      <td>0.69</td>\n",
              "      <td>0.00</td>\n",
              "      <td>7.0</td>\n",
              "      <td>0.81</td>\n",
              "      <td>-4.490000</td>\n",
              "      <td>None</td>\n",
              "      <td>0.03</td>\n",
              "      <td>132.074997</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.89</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Just The Two Of Us (feat. Bill Withers)</td>\n",
              "      <td>65.0</td>\n",
              "      <td>237106.0</td>\n",
              "      <td>0.58</td>\n",
              "      <td>0.80</td>\n",
              "      <td>0.49</td>\n",
              "      <td>0.06</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.08</td>\n",
              "      <td>-9.300000</td>\n",
              "      <td>None</td>\n",
              "      <td>0.08</td>\n",
              "      <td>95.771004</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.62</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Boulder To Birmingham - Remastered</td>\n",
              "      <td>48.0</td>\n",
              "      <td>213026.0</td>\n",
              "      <td>0.78</td>\n",
              "      <td>0.48</td>\n",
              "      <td>0.32</td>\n",
              "      <td>0.00</td>\n",
              "      <td>10.0</td>\n",
              "      <td>0.10</td>\n",
              "      <td>-10.950000</td>\n",
              "      <td>None</td>\n",
              "      <td>0.03</td>\n",
              "      <td>126.495003</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.31</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14927</th>\n",
              "      <td>Easy</td>\n",
              "      <td>75.0</td>\n",
              "      <td>256426.0</td>\n",
              "      <td>0.15</td>\n",
              "      <td>0.60</td>\n",
              "      <td>0.35</td>\n",
              "      <td>0.00</td>\n",
              "      <td>10.0</td>\n",
              "      <td>0.06</td>\n",
              "      <td>-15.060000</td>\n",
              "      <td>None</td>\n",
              "      <td>0.03</td>\n",
              "      <td>132.457001</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.34</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14928</th>\n",
              "      <td>Betterman</td>\n",
              "      <td>34.0</td>\n",
              "      <td>206153.0</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.62</td>\n",
              "      <td>0.49</td>\n",
              "      <td>0.00</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.12</td>\n",
              "      <td>-8.250000</td>\n",
              "      <td>None</td>\n",
              "      <td>0.03</td>\n",
              "      <td>77.977997</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.32</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14929</th>\n",
              "      <td>Ah, It's a Love Song</td>\n",
              "      <td>32.0</td>\n",
              "      <td>201000.0</td>\n",
              "      <td>0.02</td>\n",
              "      <td>0.51</td>\n",
              "      <td>0.87</td>\n",
              "      <td>0.00</td>\n",
              "      <td>10.0</td>\n",
              "      <td>0.35</td>\n",
              "      <td>-3.370000</td>\n",
              "      <td>None</td>\n",
              "      <td>0.07</td>\n",
              "      <td>145.927002</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.61</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14930</th>\n",
              "      <td>Try</td>\n",
              "      <td>65.0</td>\n",
              "      <td>247906.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.67</td>\n",
              "      <td>0.63</td>\n",
              "      <td>0.00</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.09</td>\n",
              "      <td>-7.070000</td>\n",
              "      <td>None</td>\n",
              "      <td>0.03</td>\n",
              "      <td>103.998001</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.55</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14931</th>\n",
              "      <td>Caught Me a Rhythm</td>\n",
              "      <td>53.0</td>\n",
              "      <td>198367.0</td>\n",
              "      <td>0.06</td>\n",
              "      <td>0.71</td>\n",
              "      <td>0.72</td>\n",
              "      <td>0.00</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.10</td>\n",
              "      <td>-3.560000</td>\n",
              "      <td>None</td>\n",
              "      <td>0.09</td>\n",
              "      <td>97.962997</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.54</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>14932 rows × 15 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1d1fa2d4-64e7-4ead-884e-1a1dba360571')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-1d1fa2d4-64e7-4ead-884e-1a1dba360571 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-1d1fa2d4-64e7-4ead-884e-1a1dba360571');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 46
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##✅ 9.3 Segunda"
      ],
      "metadata": {
        "id": "SWtvWIlF3Y1l"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "**A música mais rápida é um rock.**"
      ],
      "metadata": {
        "id": "h53lo5YFC9n0"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Qual a música mais rápida?\n",
        "\n",
        "filtro = df_pandas.ritmo == max(df_pandas['ritmo'])\n",
        "df_filtro2 = df_pandas[filtro]\n",
        "df_filtro2"
      ],
      "metadata": {
        "id": "qRnVg8x53aQz",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 145
        },
        "outputId": "70f4bab4-e3d2-4766-b3b7-66edd4779171"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     nome_musica  popularidade   duracao acustica  danceabilidade  energia  \\\n",
              "1740  Thirteenth          43.0  125185.0     0.28            0.64     0.23   \n",
              "\n",
              "      instrumentalidade  nota_musical  ao_vivo  volume modo_audio discurso  \\\n",
              "1740               0.86           5.0      0.1  -12.38       None     0.31   \n",
              "\n",
              "           ritmo assinatura_de_tempo valencia  \n",
              "1740  242.317993                 3.0     0.44  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a3ab9abd-a913-44df-a4fa-d401ea628b23\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>nome_musica</th>\n",
              "      <th>popularidade</th>\n",
              "      <th>duracao</th>\n",
              "      <th>acustica</th>\n",
              "      <th>danceabilidade</th>\n",
              "      <th>energia</th>\n",
              "      <th>instrumentalidade</th>\n",
              "      <th>nota_musical</th>\n",
              "      <th>ao_vivo</th>\n",
              "      <th>volume</th>\n",
              "      <th>modo_audio</th>\n",
              "      <th>discurso</th>\n",
              "      <th>ritmo</th>\n",
              "      <th>assinatura_de_tempo</th>\n",
              "      <th>valencia</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1740</th>\n",
              "      <td>Thirteenth</td>\n",
              "      <td>43.0</td>\n",
              "      <td>125185.0</td>\n",
              "      <td>0.28</td>\n",
              "      <td>0.64</td>\n",
              "      <td>0.23</td>\n",
              "      <td>0.86</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>-12.38</td>\n",
              "      <td>None</td>\n",
              "      <td>0.31</td>\n",
              "      <td>242.317993</td>\n",
              "      <td>3.0</td>\n",
              "      <td>0.44</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a3ab9abd-a913-44df-a4fa-d401ea628b23')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-a3ab9abd-a913-44df-a4fa-d401ea628b23 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-a3ab9abd-a913-44df-a4fa-d401ea628b23');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 47
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##✅ 9.4 Terceira"
      ],
      "metadata": {
        "id": "oUZLLjNA_o2h"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Nesse filtro dá pra concluir que uma das \"músicas\" mais lentas é na verdade uma entrevistas.**"
      ],
      "metadata": {
        "id": "R6zum9LqAc3-"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Qual a música mais lenta?\n",
        "filtro = df_pandas.ritmo == min(df_pandas['ritmo'])\n",
        "df_filtro3 = df_pandas[filtro]\n",
        "df_filtro3.groupby(['nome','ritmo']).size()"
      ],
      "metadata": {
        "id": "yY1pSfKi_qiv",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "c6abf422-419e-4b2f-b424-3f7e41f9379b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "nome     1\n",
              "ritmo    1\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 48
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##✅ 9.5 Quarta"
      ],
      "metadata": {
        "id": "oXoX_7xQBOIK"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# A possível gravação ao vivo\n",
        "filtro = df_pandas.ao_vivo == max(df_pandas['ao_vivo'])\n",
        "df_filtro4 = df_pandas[filtro]\n",
        "df_filtro4"
      ],
      "metadata": {
        "id": "ePyrc9vyBTdR",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "2bdc5d73-098b-4dea-ad31-bbad4c0b2a29"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                nome_musica  popularidade  duracao acustica  \\\n",
              "8959  \"Juntos (Together) - From \"\"McFarland           NaN     44.0      NaN   \n",
              "\n",
              "      danceabilidade  energia  instrumentalidade  nota_musical  ao_vivo  \\\n",
              "8959             NaN      NaN               0.87           NaN     10.0   \n",
              "\n",
              "      volume modo_audio discurso   ritmo assinatura_de_tempo valencia  \n",
              "8959    0.34       None      0.0  0.0324                 NaN      NaN  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-4442b01e-7d10-48bc-8b27-7081249dacfa\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>nome_musica</th>\n",
              "      <th>popularidade</th>\n",
              "      <th>duracao</th>\n",
              "      <th>acustica</th>\n",
              "      <th>danceabilidade</th>\n",
              "      <th>energia</th>\n",
              "      <th>instrumentalidade</th>\n",
              "      <th>nota_musical</th>\n",
              "      <th>ao_vivo</th>\n",
              "      <th>volume</th>\n",
              "      <th>modo_audio</th>\n",
              "      <th>discurso</th>\n",
              "      <th>ritmo</th>\n",
              "      <th>assinatura_de_tempo</th>\n",
              "      <th>valencia</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>8959</th>\n",
              "      <td>\"Juntos (Together) - From \"\"McFarland</td>\n",
              "      <td>NaN</td>\n",
              "      <td>44.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.87</td>\n",
              "      <td>NaN</td>\n",
              "      <td>10.0</td>\n",
              "      <td>0.34</td>\n",
              "      <td>None</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0324</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4442b01e-7d10-48bc-8b27-7081249dacfa')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-4442b01e-7d10-48bc-8b27-7081249dacfa button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-4442b01e-7d10-48bc-8b27-7081249dacfa');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 49
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##✅ 9.6 Quinta"
      ],
      "metadata": {
        "id": "fA3mPVXJCbsp"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# A mais dançante\n",
        "filtro = df_pandas.danceabilidade == max(df_pandas['danceabilidade'])\n",
        "df_filtro5 = df_pandas[filtro]\n",
        "df_filtro5"
      ],
      "metadata": {
        "id": "-PNb8S82CdUQ",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "fe6a279b-c89c-4496-a087-d55c9faf712b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     nome_musica  popularidade   duracao acustica  danceabilidade  energia  \\\n",
              "5535   Walk Away          36.0  278653.0      0.0            0.99     0.36   \n",
              "\n",
              "      instrumentalidade  nota_musical  ao_vivo  volume modo_audio discurso  \\\n",
              "5535               0.05           9.0     0.09   -8.68       None     0.09   \n",
              "\n",
              "           ritmo assinatura_de_tempo valencia  \n",
              "5535  117.977997                 4.0     0.55  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1c73b8b0-e132-4d06-b164-987ad91936b7\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>nome_musica</th>\n",
              "      <th>popularidade</th>\n",
              "      <th>duracao</th>\n",
              "      <th>acustica</th>\n",
              "      <th>danceabilidade</th>\n",
              "      <th>energia</th>\n",
              "      <th>instrumentalidade</th>\n",
              "      <th>nota_musical</th>\n",
              "      <th>ao_vivo</th>\n",
              "      <th>volume</th>\n",
              "      <th>modo_audio</th>\n",
              "      <th>discurso</th>\n",
              "      <th>ritmo</th>\n",
              "      <th>assinatura_de_tempo</th>\n",
              "      <th>valencia</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>5535</th>\n",
              "      <td>Walk Away</td>\n",
              "      <td>36.0</td>\n",
              "      <td>278653.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.99</td>\n",
              "      <td>0.36</td>\n",
              "      <td>0.05</td>\n",
              "      <td>9.0</td>\n",
              "      <td>0.09</td>\n",
              "      <td>-8.68</td>\n",
              "      <td>None</td>\n",
              "      <td>0.09</td>\n",
              "      <td>117.977997</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.55</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1c73b8b0-e132-4d06-b164-987ad91936b7')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-1c73b8b0-e132-4d06-b164-987ad91936b7 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-1c73b8b0-e132-4d06-b164-987ad91936b7');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 50
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#⚡10 Insight"
      ],
      "metadata": {
        "id": "7VYh-8uQfe1_"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "**80 % das músicas mais popularem possuem duração acima de 3 minutos.**\n",
        "\n",
        "**20 % das músicas mais popularem possuem duração acima de 2 minutos.**\n",
        "\n"
      ],
      "metadata": {
        "id": "VWV0GygOrVM8"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Diminuindo DataFrame\n",
        "\n",
        "df_menor= df_pandas[['nome_musica','popularidade','duracao','danceabilidade','energia','nota_musical','valencia','discurso']]"
      ],
      "metadata": {
        "id": "5cwuT_9cfgLf"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Verificando maiores popularidades\n",
        "df_menor.groupby('popularidade').size().tail()"
      ],
      "metadata": {
        "id": "8A1wBussgn_S",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "fb8fb6b0-553f-4e80-8629-952b5dcf74df"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "popularidade\n",
              "96.0     5\n",
              "97.0     4\n",
              "98.0     4\n",
              "99.0     1\n",
              "100.0    1\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 52
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Filtro de acordo com as maiores popularidade\n",
        "\n",
        "filtro = df_menor.popularidade.isin([100.0,99.0,98.0,97.0])\n",
        "df_popularidade = df_menor[filtro]\n",
        "df_popularidade"
      ],
      "metadata": {
        "id": "fCjB2wekosd6",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 566
        },
        "outputId": "891626e3-9b91-48d5-bf9c-63c8e38e9d3d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                          nome_musica  popularidade   duracao  \\\n",
              "144                                      Falling Down          97.0  196400.0   \n",
              "317                                        In My Mind          97.0  184560.0   \n",
              "3517                                     Lucid Dreams          97.0  239835.0   \n",
              "4720                                       SICKO MODE          97.0  312820.0   \n",
              "8474                                   In My Feelings          98.0  217925.0   \n",
              "8777                                          Happier         100.0  214289.0   \n",
              "10065                 Eastside (with Halsey & Khalid)          98.0  173799.0   \n",
              "10517  Taki Taki (with Selena Gomez, Ozuna & Cardi B)          98.0  212500.0   \n",
              "12055                       Promises (with Sam Smith)          98.0  213309.0   \n",
              "12194                          I Love It (& Lil Pump)          99.0  127946.0   \n",
              "\n",
              "       danceabilidade  energia  nota_musical valencia discurso  \n",
              "144              0.67     0.57           4.0     0.27     0.03  \n",
              "317              0.69     0.77           6.0     0.16     0.15  \n",
              "3517             0.51     0.57           6.0     0.22      0.2  \n",
              "4720             0.83     0.73           8.0     0.45     0.22  \n",
              "8474             0.83     0.63           1.0     0.35     0.13  \n",
              "8777             0.69     0.79           5.0     0.67     0.05  \n",
              "10065            0.56     0.68           6.0     0.32     0.32  \n",
              "10517            0.84     0.80           1.0     0.59     0.23  \n",
              "12055            0.78     0.77          11.0     0.49     0.04  \n",
              "12194            0.90     0.52           2.0     0.33     0.33  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-166075ad-b28b-463a-afab-e972f35c7c79\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>nome_musica</th>\n",
              "      <th>popularidade</th>\n",
              "      <th>duracao</th>\n",
              "      <th>danceabilidade</th>\n",
              "      <th>energia</th>\n",
              "      <th>nota_musical</th>\n",
              "      <th>valencia</th>\n",
              "      <th>discurso</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>144</th>\n",
              "      <td>Falling Down</td>\n",
              "      <td>97.0</td>\n",
              "      <td>196400.0</td>\n",
              "      <td>0.67</td>\n",
              "      <td>0.57</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.27</td>\n",
              "      <td>0.03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>317</th>\n",
              "      <td>In My Mind</td>\n",
              "      <td>97.0</td>\n",
              "      <td>184560.0</td>\n",
              "      <td>0.69</td>\n",
              "      <td>0.77</td>\n",
              "      <td>6.0</td>\n",
              "      <td>0.16</td>\n",
              "      <td>0.15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3517</th>\n",
              "      <td>Lucid Dreams</td>\n",
              "      <td>97.0</td>\n",
              "      <td>239835.0</td>\n",
              "      <td>0.51</td>\n",
              "      <td>0.57</td>\n",
              "      <td>6.0</td>\n",
              "      <td>0.22</td>\n",
              "      <td>0.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4720</th>\n",
              "      <td>SICKO MODE</td>\n",
              "      <td>97.0</td>\n",
              "      <td>312820.0</td>\n",
              "      <td>0.83</td>\n",
              "      <td>0.73</td>\n",
              "      <td>8.0</td>\n",
              "      <td>0.45</td>\n",
              "      <td>0.22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8474</th>\n",
              "      <td>In My Feelings</td>\n",
              "      <td>98.0</td>\n",
              "      <td>217925.0</td>\n",
              "      <td>0.83</td>\n",
              "      <td>0.63</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.35</td>\n",
              "      <td>0.13</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8777</th>\n",
              "      <td>Happier</td>\n",
              "      <td>100.0</td>\n",
              "      <td>214289.0</td>\n",
              "      <td>0.69</td>\n",
              "      <td>0.79</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.67</td>\n",
              "      <td>0.05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10065</th>\n",
              "      <td>Eastside (with Halsey &amp; Khalid)</td>\n",
              "      <td>98.0</td>\n",
              "      <td>173799.0</td>\n",
              "      <td>0.56</td>\n",
              "      <td>0.68</td>\n",
              "      <td>6.0</td>\n",
              "      <td>0.32</td>\n",
              "      <td>0.32</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10517</th>\n",
              "      <td>Taki Taki (with Selena Gomez, Ozuna &amp; Cardi B)</td>\n",
              "      <td>98.0</td>\n",
              "      <td>212500.0</td>\n",
              "      <td>0.84</td>\n",
              "      <td>0.80</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.59</td>\n",
              "      <td>0.23</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12055</th>\n",
              "      <td>Promises (with Sam Smith)</td>\n",
              "      <td>98.0</td>\n",
              "      <td>213309.0</td>\n",
              "      <td>0.78</td>\n",
              "      <td>0.77</td>\n",
              "      <td>11.0</td>\n",
              "      <td>0.49</td>\n",
              "      <td>0.04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12194</th>\n",
              "      <td>I Love It (&amp; Lil Pump)</td>\n",
              "      <td>99.0</td>\n",
              "      <td>127946.0</td>\n",
              "      <td>0.90</td>\n",
              "      <td>0.52</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.33</td>\n",
              "      <td>0.33</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-166075ad-b28b-463a-afab-e972f35c7c79')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-166075ad-b28b-463a-afab-e972f35c7c79 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-166075ad-b28b-463a-afab-e972f35c7c79');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 53
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Conclusão\n",
        "\n",
        "df_popularidade.sort_values(by='popularidade',ascending=False)"
      ],
      "metadata": {
        "id": "vzHZ-qS-p5Ds",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 566
        },
        "outputId": "47a17047-a2cd-4519-8da9-a6fb79ce1580"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                          nome_musica  popularidade   duracao  \\\n",
              "8777                                          Happier         100.0  214289.0   \n",
              "12194                          I Love It (& Lil Pump)          99.0  127946.0   \n",
              "8474                                   In My Feelings          98.0  217925.0   \n",
              "10065                 Eastside (with Halsey & Khalid)          98.0  173799.0   \n",
              "10517  Taki Taki (with Selena Gomez, Ozuna & Cardi B)          98.0  212500.0   \n",
              "12055                       Promises (with Sam Smith)          98.0  213309.0   \n",
              "144                                      Falling Down          97.0  196400.0   \n",
              "317                                        In My Mind          97.0  184560.0   \n",
              "3517                                     Lucid Dreams          97.0  239835.0   \n",
              "4720                                       SICKO MODE          97.0  312820.0   \n",
              "\n",
              "       danceabilidade  energia  nota_musical valencia discurso  \n",
              "8777             0.69     0.79           5.0     0.67     0.05  \n",
              "12194            0.90     0.52           2.0     0.33     0.33  \n",
              "8474             0.83     0.63           1.0     0.35     0.13  \n",
              "10065            0.56     0.68           6.0     0.32     0.32  \n",
              "10517            0.84     0.80           1.0     0.59     0.23  \n",
              "12055            0.78     0.77          11.0     0.49     0.04  \n",
              "144              0.67     0.57           4.0     0.27     0.03  \n",
              "317              0.69     0.77           6.0     0.16     0.15  \n",
              "3517             0.51     0.57           6.0     0.22      0.2  \n",
              "4720             0.83     0.73           8.0     0.45     0.22  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3bac7ae7-bce7-49aa-9191-4d0f5b0238f4\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>nome_musica</th>\n",
              "      <th>popularidade</th>\n",
              "      <th>duracao</th>\n",
              "      <th>danceabilidade</th>\n",
              "      <th>energia</th>\n",
              "      <th>nota_musical</th>\n",
              "      <th>valencia</th>\n",
              "      <th>discurso</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>8777</th>\n",
              "      <td>Happier</td>\n",
              "      <td>100.0</td>\n",
              "      <td>214289.0</td>\n",
              "      <td>0.69</td>\n",
              "      <td>0.79</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.67</td>\n",
              "      <td>0.05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12194</th>\n",
              "      <td>I Love It (&amp; Lil Pump)</td>\n",
              "      <td>99.0</td>\n",
              "      <td>127946.0</td>\n",
              "      <td>0.90</td>\n",
              "      <td>0.52</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.33</td>\n",
              "      <td>0.33</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8474</th>\n",
              "      <td>In My Feelings</td>\n",
              "      <td>98.0</td>\n",
              "      <td>217925.0</td>\n",
              "      <td>0.83</td>\n",
              "      <td>0.63</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.35</td>\n",
              "      <td>0.13</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10065</th>\n",
              "      <td>Eastside (with Halsey &amp; Khalid)</td>\n",
              "      <td>98.0</td>\n",
              "      <td>173799.0</td>\n",
              "      <td>0.56</td>\n",
              "      <td>0.68</td>\n",
              "      <td>6.0</td>\n",
              "      <td>0.32</td>\n",
              "      <td>0.32</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10517</th>\n",
              "      <td>Taki Taki (with Selena Gomez, Ozuna &amp; Cardi B)</td>\n",
              "      <td>98.0</td>\n",
              "      <td>212500.0</td>\n",
              "      <td>0.84</td>\n",
              "      <td>0.80</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.59</td>\n",
              "      <td>0.23</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12055</th>\n",
              "      <td>Promises (with Sam Smith)</td>\n",
              "      <td>98.0</td>\n",
              "      <td>213309.0</td>\n",
              "      <td>0.78</td>\n",
              "      <td>0.77</td>\n",
              "      <td>11.0</td>\n",
              "      <td>0.49</td>\n",
              "      <td>0.04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>144</th>\n",
              "      <td>Falling Down</td>\n",
              "      <td>97.0</td>\n",
              "      <td>196400.0</td>\n",
              "      <td>0.67</td>\n",
              "      <td>0.57</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.27</td>\n",
              "      <td>0.03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>317</th>\n",
              "      <td>In My Mind</td>\n",
              "      <td>97.0</td>\n",
              "      <td>184560.0</td>\n",
              "      <td>0.69</td>\n",
              "      <td>0.77</td>\n",
              "      <td>6.0</td>\n",
              "      <td>0.16</td>\n",
              "      <td>0.15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3517</th>\n",
              "      <td>Lucid Dreams</td>\n",
              "      <td>97.0</td>\n",
              "      <td>239835.0</td>\n",
              "      <td>0.51</td>\n",
              "      <td>0.57</td>\n",
              "      <td>6.0</td>\n",
              "      <td>0.22</td>\n",
              "      <td>0.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4720</th>\n",
              "      <td>SICKO MODE</td>\n",
              "      <td>97.0</td>\n",
              "      <td>312820.0</td>\n",
              "      <td>0.83</td>\n",
              "      <td>0.73</td>\n",
              "      <td>8.0</td>\n",
              "      <td>0.45</td>\n",
              "      <td>0.22</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3bac7ae7-bce7-49aa-9191-4d0f5b0238f4')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-3bac7ae7-bce7-49aa-9191-4d0f5b0238f4 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-3bac7ae7-bce7-49aa-9191-4d0f5b0238f4');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 54
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Verificando menores popularidades\n",
        "df_menor.groupby('popularidade').size().sort_values(ascending=True)"
      ],
      "metadata": {
        "id": "BXDZLdEBsrxb",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "b905bfad-2e47-44f8-966b-5d567ae8cd9a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "popularidade\n",
              "100.0      1\n",
              "99.0       1\n",
              "97.0       4\n",
              "98.0       4\n",
              "96.0       5\n",
              "        ... \n",
              "51.0     324\n",
              "53.0     325\n",
              "55.0     345\n",
              "58.0     347\n",
              "52.0     355\n",
              "Length: 101, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 55
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**67% dos que tem duração menor que 2 minutos se enquadram entre as três piores classificações de popularidade (52.0 | 55.0 | 58.0  )**"
      ],
      "metadata": {
        "id": "-V_JOQyG2Omi"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Verificando quantidade que estão abaixo dos dois minutos\n",
        "\n",
        "maior = 0\n",
        "menor = 0\n",
        "\n",
        "for i in range(len(df_pandas)):\n",
        "  x = df_pandas.loc[i,'duracao']\n",
        "  if (x < 120000) and df_pandas.loc[i,'popularidade'] == 52.0 or df_pandas.loc[i,'popularidade'] == 55.0 or df_pandas.loc[i,'popularidade'] == 58.0:\n",
        "    menor += 1\n",
        "  elif x >= 120000 and df_pandas.loc[i,'popularidade'] == 52.0 or df_pandas.loc[i,'popularidade'] == 55.0 or df_pandas.loc[i,'popularidade'] == 58.0:\n",
        "    maior += 1\n",
        "\n",
        "print(f'Quantidade maiores que dois minutos: {maior}')\n",
        "print(f'Quantidade menores que dois minutos: {menor}')\n",
        "\n",
        "\n",
        "     "
      ],
      "metadata": {
        "id": "7rLk7qbnuYi0",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "43e835ec-9f15-4681-9ff7-6bdb94bfd680"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Quantidade maiores que dois minutos: 344\n",
            "Quantidade menores que dois minutos: 703\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#⚡11 SparkSQL"
      ],
      "metadata": {
        "id": "Gnmqyd6j_-ed"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Salvando DataFrame como tabel\n",
        "\n",
        "df.write.saveAsTable('spotify')"
      ],
      "metadata": {
        "id": "cUiLv2vjABfy"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Setando a DataBase e a Tabela\n",
        "spark.sql('show databases').show()\n",
        "spark.sql('show tables').show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Jrl3IzKG_-J4",
        "outputId": "0d34aa90-b442-438d-fed3-5862ba298ccc"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "+---------+\n",
            "|namespace|\n",
            "+---------+\n",
            "|  default|\n",
            "+---------+\n",
            "\n",
            "+---------+---------+-----------+\n",
            "|namespace|tableName|isTemporary|\n",
            "+---------+---------+-----------+\n",
            "|  default|  spotify|      false|\n",
            "+---------+---------+-----------+\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Consulta 1\n",
        "spark.sql('Select * From spotify').show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "NX3gxnRTAxSt",
        "outputId": "49ee22c6-440e-429a-ce33-ee4811dd1e87"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "+--------------------+------------+-------+--------+--------------+-------+-----------------+------------+-------+------+----------+--------+-------+-------------------+--------+\n",
            "|         nome_musica|popularidade|duracao|acustica|danceabilidade|energia|instrumentalidade|nota_musical|ao_vivo|volume|modo_audio|discurso|  ritmo|assinatura_de_tempo|valencia|\n",
            "+--------------------+------------+-------+--------+--------------+-------+-----------------+------------+-------+------+----------+--------+-------+-------------------+--------+\n",
            "|            Insecure|        53.0| 191906|    0.37|          0.48|   0.69|              0.0|          10|   0.08| -3.23|      null|    0.17|185.502|                4.0|    0.55|\n",
            "|The Girl From Ipa...|        50.0| 325506|    0.89|          0.66|   0.12|              0.0|           5|   0.11| -19.2|      null|    0.05|129.919|                4.0|    0.36|\n",
            "|         Shop Around|        54.0| 170760|     0.8|          0.56|   0.69|              0.0|           7|   0.81| -4.49|      null|    0.03|132.075|                4.0|    0.89|\n",
            "|Just The Two Of U...|        65.0| 237106|    0.58|           0.8|   0.49|             0.06|           1|   0.08|  -9.3|      null|    0.08| 95.771|                4.0|    0.62|\n",
            "|Boulder To Birmin...|        48.0| 213026|    0.78|          0.48|   0.32|              0.0|          10|    0.1|-10.95|      null|    0.03|126.495|                4.0|    0.31|\n",
            "|     Fight The Power|        56.0| 282640|     0.0|           0.8|   0.58|              0.0|           2|   0.52|-12.97|      null|    0.25|105.974|                4.0|    0.41|\n",
            "|   Can’t Take A Joke|        80.0| 163974|    0.13|          0.76|    0.6|              0.0|          10|   0.08| -7.25|      null|    0.18|173.897|                4.0|    0.45|\n",
            "|             Tonight|        46.0| 250000|    0.04|           0.8|   0.68|              0.0|           5|   0.05| -6.51|      null|    0.05|112.019|                4.0|    0.73|\n",
            "|               Intro|        75.0| 127920|    0.46|          0.61|   0.79|             0.91|           9|   0.13| -8.87|      null|    0.03|100.351|                4.0|    0.16|\n",
            "|          Atomic Dog|        45.0| 286160|     0.3|          0.89|   0.67|              0.0|           6|   0.24| -6.28|      null|    0.22|107.654|                4.0|    0.73|\n",
            "|              Signal|        50.0| 265951|    0.05|          0.79|   0.31|             0.09|           5|   0.06| -5.26|      null|    0.05| 75.989|                4.0|    0.25|\n",
            "|             El Cafe|        42.0| 226077|    0.36|           0.7|   0.91|              0.0|           0|   0.06| -2.74|      null|    0.08|141.106|                4.0|    0.97|\n",
            "|     Cherokee Maiden|        25.0| 173693|    0.76|          0.66|   0.54|             0.02|           9|   0.07|-12.73|      null|    0.07|112.304|                4.0|    0.67|\n",
            "|            Fraulein|        32.0| 161440|    0.26|          0.75|   0.41|              0.0|           7|   0.11|  -9.7|      null|    0.04|120.981|                4.0|    0.68|\n",
            "|  I Love You Because|        26.0| 127746|    0.89|          0.48|   0.26|              0.0|           5|   0.13|-11.48|      null|    0.03|  97.12|                4.0|    0.59|\n",
            "|             El Paso|        62.0| 259306|    0.83|          0.65|   0.45|              0.0|           2|   0.16| -9.71|      null|    0.03|106.662|                3.0|    0.69|\n",
            "|Seven Spanish Angels|        54.0| 231026|    0.37|          0.55|   0.29|              0.0|           5|   0.12|-13.14|      null|    0.04|132.439|                4.0|    0.38|\n",
            "|                Open|        64.0| 217053|     0.9|          0.55|   0.32|             0.09|           0|   0.28|-10.96|      null|    0.03| 90.957|                4.0|    0.23|\n",
            "|          Put `em Up|        36.0| 211600|     0.0|          0.65|   0.87|              0.0|           5|   0.16| -3.79|      null|    0.04|130.056|                4.0|    0.74|\n",
            "|  Orphans of the Sky|        50.0| 412890|    0.91|          0.17|   0.15|             0.76|          10|   0.08|-18.67|      null|    0.04|123.948|                3.0|    0.04|\n",
            "+--------------------+------------+-------+--------+--------------+-------+-----------------+------------+-------+------+----------+--------+-------+-------------------+--------+\n",
            "only showing top 20 rows\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Consulta 2\n",
        "spark.sql('Select nome_musica,popularidade From spotify').show()"
      ],
      "metadata": {
        "id": "rCnlNF_yA-Wd",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a6d0e71f-9c58-4b49-80ee-25e70f6286cf"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "+--------------------+------------+\n",
            "|         nome_musica|popularidade|\n",
            "+--------------------+------------+\n",
            "|            Insecure|        53.0|\n",
            "|The Girl From Ipa...|        50.0|\n",
            "|         Shop Around|        54.0|\n",
            "|Just The Two Of U...|        65.0|\n",
            "|Boulder To Birmin...|        48.0|\n",
            "|     Fight The Power|        56.0|\n",
            "|   Can’t Take A Joke|        80.0|\n",
            "|             Tonight|        46.0|\n",
            "|               Intro|        75.0|\n",
            "|          Atomic Dog|        45.0|\n",
            "|              Signal|        50.0|\n",
            "|             El Cafe|        42.0|\n",
            "|     Cherokee Maiden|        25.0|\n",
            "|            Fraulein|        32.0|\n",
            "|  I Love You Because|        26.0|\n",
            "|             El Paso|        62.0|\n",
            "|Seven Spanish Angels|        54.0|\n",
            "|                Open|        64.0|\n",
            "|          Put `em Up|        36.0|\n",
            "|  Orphans of the Sky|        50.0|\n",
            "+--------------------+------------+\n",
            "only showing top 20 rows\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Consulta 3\n",
        "spark.sql('Select nome_musica as musica_mais_popular, popularidade From spotify WHERE popularidade == 100.0 ').show()"
      ],
      "metadata": {
        "id": "CfbgqADUBMDJ",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "bcf71045-ea62-4718-9d26-7ef15e228c1e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "+-------------------+------------+\n",
            "|musica_mais_popular|popularidade|\n",
            "+-------------------+------------+\n",
            "|            Happier|       100.0|\n",
            "+-------------------+------------+\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Consulta 4\n",
        "spark.sql('Select nome_musica ,modo_audio From spotify').show()"
      ],
      "metadata": {
        "id": "_yE1kZR7Bir2",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "dbb0ce45-b982-4809-9ead-35c86380e26c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "+--------------------+----------+\n",
            "|         nome_musica|modo_audio|\n",
            "+--------------------+----------+\n",
            "|            Insecure|      null|\n",
            "|The Girl From Ipa...|      null|\n",
            "|         Shop Around|      null|\n",
            "|Just The Two Of U...|      null|\n",
            "|Boulder To Birmin...|      null|\n",
            "|     Fight The Power|      null|\n",
            "|   Can’t Take A Joke|      null|\n",
            "|             Tonight|      null|\n",
            "|               Intro|      null|\n",
            "|          Atomic Dog|      null|\n",
            "|              Signal|      null|\n",
            "|             El Cafe|      null|\n",
            "|     Cherokee Maiden|      null|\n",
            "|            Fraulein|      null|\n",
            "|  I Love You Because|      null|\n",
            "|             El Paso|      null|\n",
            "|Seven Spanish Angels|      null|\n",
            "|                Open|      null|\n",
            "|          Put `em Up|      null|\n",
            "|  Orphans of the Sky|      null|\n",
            "+--------------------+----------+\n",
            "only showing top 20 rows\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Consulta 5\n",
        "spark.sql('Select nome_musica ,modo_audio,volume From spotify').show()"
      ],
      "metadata": {
        "id": "q3O8u_5TCix5",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "60835da2-5ade-4ef1-ef0f-cc90f46a6ace"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "+--------------------+----------+------+\n",
            "|         nome_musica|modo_audio|volume|\n",
            "+--------------------+----------+------+\n",
            "|            Insecure|      null| -3.23|\n",
            "|The Girl From Ipa...|      null| -19.2|\n",
            "|         Shop Around|      null| -4.49|\n",
            "|Just The Two Of U...|      null|  -9.3|\n",
            "|Boulder To Birmin...|      null|-10.95|\n",
            "|     Fight The Power|      null|-12.97|\n",
            "|   Can’t Take A Joke|      null| -7.25|\n",
            "|             Tonight|      null| -6.51|\n",
            "|               Intro|      null| -8.87|\n",
            "|          Atomic Dog|      null| -6.28|\n",
            "|              Signal|      null| -5.26|\n",
            "|             El Cafe|      null| -2.74|\n",
            "|     Cherokee Maiden|      null|-12.73|\n",
            "|            Fraulein|      null|  -9.7|\n",
            "|  I Love You Because|      null|-11.48|\n",
            "|             El Paso|      null| -9.71|\n",
            "|Seven Spanish Angels|      null|-13.14|\n",
            "|                Open|      null|-10.96|\n",
            "|          Put `em Up|      null| -3.79|\n",
            "|  Orphans of the Sky|      null|-18.67|\n",
            "+--------------------+----------+------+\n",
            "only showing top 20 rows\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#⚡12 **Carregando MySQL**"
      ],
      "metadata": {
        "id": "MqPFrIygw45m"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Instalações necessárias\n",
        "!pip install pymysql\n",
        "!pip install sqlalchemy"
      ],
      "metadata": {
        "id": "kHq-ZJ8FgFK6"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Importações\n",
        "import pymysql\n",
        "import sqlalchemy "
      ],
      "metadata": {
        "id": "SGE7pjY4hyn6"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Conexão\n",
        "\n",
        "from sqlalchemy import create_engine\n",
        "url = 'mysql+pymysql://root:123@34.168.139.141/tratados'\n",
        "engine = sqlalchemy.create_engine(url)"
      ],
      "metadata": {
        "id": "wMqcP1bIiBQp"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Enviando\n",
        "\n",
        "df_pandas_trat.to_sql('df_tratado', engine, index=True, index_label= 'id')"
      ],
      "metadata": {
        "id": "YdI3bvxTdKzM"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}